<template>
  <div>
    <editWindow
      class="cl-edit-team"
      :title="actionLableName"
      v-model="showWindow"
      :fullscreen="false"
      width="50%"
      :loading="!isLoaddingDone"
      @on-ok="formDataSubmit()"
    >
      <Form
        ref="formDataInfo"
        :show-message="true"
        :model="formDataInfo"
        :rules="ruleValidate"
        :label-width="80"
      >
        <Row :gutter="18">
          <Col span="24">
            <FormItem label="班组编号" prop="teamCode">
              <referenceField v-model="formDataInfo.teamCode" :disabled="detailDisabled" maxlength="20" placeholder="请输入班组编号" :form-name="formmastername"
            :id="formDataInfo.id"></referenceField>
            </FormItem>
          </Col>
          <Col span="24">
            <FormItem label="班组名称" prop="teamName">
              <Input v-model="formDataInfo.teamName" :disabled="detailDisabled" maxlength="80" placeholder="请输入班组名称"></Input>
            </FormItem>
          </Col>
          <Col span="24">
            <FormItem label="部门" prop="deptId">
              <popup
                v-model="formDataInfo.deptCode"
                field-name="deptCode"
                :disabled="detailDisabled"
                popup-name="deptSingleBox"
                :fill-model.sync="formDataInfo"
                render-fields="deptId,deptCode,deptName"
                from-fields="id,deptCode,deptName"
                :suffix="true"
                :suffix-model="formDataInfo.deptName"
                :query-params="{}"
              ></popup>
            </FormItem>
          </Col>
          <Col span="24">
            <FormItem label="班组类型" prop="teamType">
              <optionSearch
                @onChange="optionOnChange"
                :defaultItem="formDataInfo.teamType"
                formKey="teamType"
                :disabled="detailDisabled"
                :loaddingDataWhen="showWindow"
                query="classType"
              />
            </FormItem>
          </Col>
          <Col span="24">
            <FormItem label="备注" prop="remark">
              <Input
                v-model="formDataInfo.remark"
                type="textarea"
                maxlength="100"
                :disabled="detailDisabled"
                :autosize="{ minRows: 2, maxRows: 5 }"
                placeholder="请输入备注..."
              ></Input>
            </FormItem>
          </Col>
        </Row>
      </Form>
    </editWindow>
  </div>
</template>

<script>
/**
 * @desc edit-dept 描述
 * 所有重要 可以重用的方法 放在了基类,继承即可用重复使用 dyBaseMixins,
 * 可以根据需求重写所需的方法:
 *
 * @params 参数
 *
 * @return 返回
 *
 * @author Andy Huang
 *
 * @created 2019/11/20 17:07:54
 */
import referenceField from '@/components/referenceField/referenceField'
import popup from "@/components/popup/popup";
import optionSearch from "../../components/optionSearch";
import editBaseMixins from "../../mixins/edit";
import { customValidator ,uniqueValidator} from '@/libs/validator';
const default_formDataInfo = {
  teamCode: "",
  teamName: "",
  teamType: "1",
  deptId: "",
  deptCode:"",
  deptName:""
};
export default {
  
  actionSubtitle:'班组', // 当前操作副标题
  name: "edit-team",
  mixins: [editBaseMixins],
  components: { optionSearch, popup,referenceField},
  data() {
    return {
      formmastername:'teamFm',
      requestBaseUrl: "/bas/team", // 请求 查询 操作的基础路径
      formDataInfo: Object.assign({}, default_formDataInfo), // 防止添加和更新数据提交发生冲突
      // 需要验证的数据
      ruleValidate: {
        deptId: [
          { required: true, message: "所属部门不能为空", trigger: "blur" }
          
        ],
        teamCode: [
          { required: true, message: "班组编号不能为空", trigger: "blur" },
          {validator: customValidator,trigger: "blur",customRule: ["identifier"],fieldDesc: "班组编号"},
          {
                validator:uniqueValidator,
                trigger: "blur",
                fieldDesc: "班组编号",
                params:{
                  fieldName:'teamCode',
                  formName:'teamFm',
                  id:()=>{
                    return this.formDataInfo.id;
                  }
                }
              }
        ],
        teamName: [
          { required: true, message: "班组名称不能为空", trigger: "blur" },
          { validator: customValidator,trigger: "blur", customRule: ["toCDB","spaceStr"], fieldDesc: "班组名称" }
        ],
        teamType: [
          { required: true, message: "班组类型不能为空", trigger: "blur" }
        ]
      }
    };
  },

  methods: {
    // 重写父类,添加时候,清空数据
    HandleFormDataInfo() {
      this.formDataInfo = Object.assign({}, default_formDataInfo);
    }
  }
};
</script>

<style>
.cl-edit-team .ivu-select-item {
  display: block;
}
</style>
