<template>
  <Modal
      :z-index="2"
      :styles="{top: fullscreen?'0':'45px'}"
      v-model="show"
      :mask-closable="maskClosable"
      class="edit-window"
      :scrollable="scrollable"
      :fullscreen="fullscreen"
      :title="title"
      @on-ok="onOk"
      @on-cancel="onCancel"
      @on-visible-change="onVisibleChange"
      :width="width">
      <p slot="header">
      <Icon type="md-help-circle" style="color:#2D8CF0" @click="IconClick" size='18'/>
      <span style="margin-left:10px">{{title}}</span>
    </p>
    <div>
       <Spin size="large" fix v-if="loading"></Spin>
    </div>
    <slot :detailDisabled="detailDisabled" ref="windowContent"></slot>
    <div slot="footer">
       <div class="footerBox">
         <div class="footerItem left">
            <div  v-show="showNextDetailBtn">
               <!-- <Button type="info" @click="preRowDetail()">
                     <Icon type="ios-arrow-dropleft" />
                      上一条
                </Button>
                 <Button type="success" @click="nextRowDetail()">
                     <Icon type="ios-arrow-dropright" />
                      下一条
                </Button> -->
                <ButtonGroup>
                  <Button :loading="loaddingPreOrNextDetail" @click="preRowDetail()"  type="info">
                      <Icon type="ios-arrow-back" />
                      上一条
                  </Button>
                  <Button :loading="loaddingPreOrNextDetail"  @click="nextRowDetail()"  type="success">
                      下一条
                      <Icon type="ios-arrow-forward" />
                  </Button>
              </ButtonGroup>
            </div>
           
         </div>
         <div class="footerItem right">
             <slot name="footer">
              <div>
                  <Button v-if="customerActionBtnText!=''" type="success"  @click="onCustomerAction">{{customerActionBtnText}}</Button>
                  <Button v-if="this.$parent.detailDisabled" type="error" @click="detailToUpdate()" :disabled="!this.$parent.detailConvertUpdate">编辑</Button>
                  <Button v-show="showOkBtn" :disabled="disabledSubmitBtn" v-else :loading="loaddingBtn" type="primary" @click="onOk">
                      <Icon type="ios-arrow-down" />
                      确定 (F10)
                </Button>
                  <Button @click="onCancel">
                    <Icon color="red" type="md-close" />
                      取消 (Esc)
                </Button>
              </div>
            </slot>
         </div>
       </div>
    </div>
  </Modal>
</template>

<script>
export default {
  data () {
    return {
      loadDetailTimer:null,
      loaddingPreOrNextDetail:false, // 是否加载数据中
      showNextDetailBtn:false,// 是否显示 上一条下一条 按钮
      show: false,
      html: '',
      modal9: false
    }
  },
  props: {
    
    // 是否禁用确认按钮
    disabledSubmitBtn: {
      type: Boolean,
      default: false
    },
    // 自定义方法名称
    customerActionBtnText: {
      type: String,
      default: ''
    },
    // 是否显示确认按钮
    showOkBtn: {
      type: Boolean,
      default: true
    },
    spinLoaddingText: {
      type: String,
      default: ''
    },
    loading: {
      type: Boolean,
      default: false
    },
    loaddingBtn: {
      type: Boolean,
      default: false
    },
    maskClosable: {
      type: Boolean,
      default: false
    },
    scrollable: {
      type: Boolean,
      default: true
    },
    fullscreen: {
      type: Boolean,
      default: true
    },
    title: {
      type: String,
      default: '窗口'
    },
    value: {
      type: Boolean,
      default: false
    },
    width: {
      type: String | Number,
      default: 'auto'
    },
    lazyTime: {
      required: false,
      default: 0
    },
    detailDisabled: {// 详情禁用控件
      type: Boolean,
      default: false
    }
  },
  computed:{
    
    // 当前操作类型,编辑/添加/详细 
     currentActionType(){
       return this.$store.state.app.currentActionType
     }
  },
  watch: {
   
    // 监控当前操作类型 是否 编辑/添加/详细  是否隐藏上一条/下一条
    currentActionType(n,o){
      if(!!n && n=='detail'){
         this.showNextDetailBtn = true
      }else{
         this.showNextDetailBtn = false
      }
     
    },
    show (n, o) {
      this.$emit('input', n)
      if(!!!n){
         this.$store.commit('setCurrentActionType','')
      }
    },
    value (n, o) {
      this.show = n
    },
    detailDisabled (n, o) {

    }
  },
  methods: {
    // 上一条 ROW详情 信息
    preRowDetail(){
      this.loaddingPreOrNextDetail = true;
      clearTimeout(this.loadDetailTimer)
      this.loadDetailTimer = setTimeout(()=>{
          this.$store.commit('setPreOrNextAction','pre')
          this.loaddingPreOrNextDetail = false;
      },1000)
     
    },
    // 下一条 ROW详情  信息
    nextRowDetail(){
      this.loaddingPreOrNextDetail = true;
        clearTimeout(this.loadDetailTimer)
      this.loadDetailTimer = setTimeout(()=>{
         this.$store.commit('setPreOrNextAction','next')
           this.loaddingPreOrNextDetail = false;
      },1000)
     
    },
    onVisibleChange (val) {
      this.$emit('onVisibleChange', val)
    },
    // 自定义方法
    onCustomerAction () {
      this.$emit('onCustomerAction')
    },
    IconClick () {
      // debugger
      window.open('', '', 'width=500,height=500,left=100%,top=100%')
      //  myWindow.focus();
    },
    onOk () {
      this.$emit('on-ok')
    },
    onCancel () {
      this.show = false
      this.disabledUpdate = true
      this.$emit('on-cancel')
    },
    detailToUpdate () {
      if (this.$parent.detailConvertUpdate) {
        this.$parent.detailDisabled = false
      } else {
        this.$Message.warning('数据已被禁用不能编辑')
      }
    }
  },
  created () {
    // debugger;
    // this.detailDisabled = this.$parent.detailDisabled;
  }
}
</script>

<style lang='scss'>
.footerBox{
  display: flex;
  .footerItem{
    width: 50%;
   // height: 50px;
    //border: 1px solid red;
    &.left{
      text-align: left;
    }
  }
}

.edit-window .ivu-modal-body{
  padding: 10px 20px 0 10px !important;
}
.edit-window .ivu-modal-header{
  background-color: #fcfcfc;
}

</style>
