/* eslint-disable */
import { Component, Inject, Model, Prop, Provide, Vue, Watch } from 'vue-property-decorator'
import { mixins } from 'vue-class-component'
import baseMixin from '@/mixins/baseMixin'
import md5 from 'js-md5'
import { getToken, getUserNameMd5 } from '@/utils/cookies'
import { UserModule } from '@/store/modules/user'
interface User {
    firstName: string
    lastName: string
}

@Component({
    name: 'testTable',
    components: {
    }
})
// export default class YourComponent extends Vue {
export default class extends mixins(baseMixin) {
    public md5LoginName: string = ''
    public message: string = 'This is a    message'
    public loginForm = {
        username: 'admin',
        password: '1234567'
    }

    public mounted() {

    }
    public async handleLogin() {
        try {
            const res_md5Name = await this.$store.dispatch('getUserNameMd5_action', this.loginForm.username)
            this.md5LoginName = res_md5Name.data
            console.warn('res_md5Name:' + JSON.stringify(res_md5Name))

            if (this.md5LoginName !== "") {
                const md5Pwd = md5(
                    md5(this.loginForm.password + this.md5LoginName) + this.md5LoginName
                )
                const params = {
                    userId: this.loginForm.username,
                    pwd: md5Pwd
                }
                const resHandleLogin = await this.$store.dispatch('handleLogin_action', params)
                console.warn('handleLogin:' + JSON.stringify(resHandleLogin))

                if (resHandleLogin.data != '' && getToken()) {
                    const getMenuByToken = await this.$store.dispatch('getMenuByToken_action')
                    console.warn('getMenuByToken:' + JSON.stringify(getMenuByToken))
                }
            }

        } catch (error) {

        }
    }

}
