<template>
  <div>
    <editWindow
      :title="actionLableName"
      v-model="showWindow"
      :fullscreen="false"
      width="50%"
      :loading="!isLoaddingDone"
      @on-ok="formDataSubmit()"
    >
      <Form
        ref="formDataInfo"
        :show-message="false"   
        :model="formDataInfo"
        :rules="ruleValidate"
        :label-width="80"
      >
        <FormItem label="编号" prop="payCode">
          <Input
            v-model="formDataInfo.payCode"
            maxlength="20"
            placeholder="请输入编号"
          ></Input>
        </FormItem>
        <FormItem label="天数" prop="payDays">
          <Input
            v-model="formDataInfo.payDays"
            type="number"
            maxlength="20"
            placeholder="请输入天数"
          ></Input>
        </FormItem>

        <FormItem label="描述" prop="payName">
          <Input
            v-model="formDataInfo.payName"
            type="textarea"
            maxlength="20"
            placeholder="请输入描述"
          ></Input>
        </FormItem>

        <FormItem label="备注" prop="remark">
          <Input
            v-model="formDataInfo.remark"
            type="textarea"
            maxlength="100"
            :autosize="{ minRows: 2, maxRows: 5 }"
            placeholder="请输入备注..."
          ></Input>
        </FormItem>
      </Form>
    </editWindow>
  </div>
</template>

<script>
/**
 * @desc edit-dept 描述
 * 所有重要 可以重用的方法 放在了基类,继承即可用重复使用 dyBaseMixins,
 * 可以根据需求重写所需的方法:
 *
 * @params 参数
 *
 * @return 返回
 *
 * @author Andy Huang
 *
 * @created 2019/11/20 17:07:54
 */
import editBaseMixins from "../../mixins/edit";
const default_formDataInfo = {
  payCode: "",
  payDays: "",
  payName: "",
  remark: ""
};
export default {
  name: "edit-payType",
  mixins: [editBaseMixins],

  data() {
    return {
      requestBaseUrl: "/bas/payType", // 请求 查询 操作的基础路径
      formDataInfo: Object.assign({}, default_formDataInfo), // 防止添加和更新数据提交发生冲突
      // 需要验证的数据
      ruleValidate: {
        payCode: [{ required: true, message: "", trigger: "blur" }],
        payDays: [{ required: true, message: "", trigger: "blur" }]
      }
    };
  },

  methods: {
    // 重写父类,添加时候,清空数据
    HandleFormDataInfo() {
      this.formDataInfo = Object.assign({}, default_formDataInfo);
    }
  }
};
</script>

<style></style>
