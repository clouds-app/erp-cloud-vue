<template>
  <div>
    <editWindow
      class="cl-edit-boxAreaPrice"
      :title="actionLableName"
      v-model="showWindow"
      :fullscreen="false"
      width="60%"
      :loading="!isLoaddingDone"
      :spinLoaddingText="spinLoaddingText"
      @on-ok="formTableDataSubmit()"
    >
      <Form
        ref="formDataInfo"
        :show-message="false"
        :model="formDataInfo.master"
        :rules="ruleValidate"
        :label-width="100"
      >


      <Row> 
        <Col span="8">
              <FormItem label="报价单号" prop="bpNo">
                              <Input
                                disabled
                                v-model="formDataInfo.master.bpNo"
                                maxlength="20"
                                placeholder=""
                              ></Input>
              </FormItem>
        </Col>      
        <Col span="16">
              <FormItem label="客户" prop="cusName">
                      <div>
                      <popup
                        @on-fill="Initializationdata"
                        v-model="formDataInfo.master.custCode"
                        field-name="custCode"
                        :disabled="false"
                        popup-name="CustomerSingleBox"
                        :fill-model.sync="formDataInfo.master"
                        render-fields="custId,custCode,custName"
                        from-fields="id,cusCode,cusName"
                        :suffix="true"
                        :suffix-model="formDataInfo.master.custName"
                        :query-params="{}"
                      />
                  </div>
              </FormItem>
        </Col>      
        <Col span="12">      
             
              <FormItem label="生效日期">
                    <DatePicker
                      type="date"
                      format="yyyy-MM-dd HH:mm:ss"
                      v-model="formDataInfo.master.effectDate"
                    ></DatePicker>
                </FormItem>
        </Col>
        <Col span="12">
               <FormItem label="计价单位" prop="priceUnit">
                        <optionSearch
                          
                          @onChange="optionOnChange"
                          :defaultItem="formDataInfo.master.priceUnit"
                          :loaddingDataWhen="showWindow"
                          formKey="priceUnit"
                          query="priceUnit"
                        />
            </FormItem>        
              </FormItem>
        </Col>
        
        
        <Col span="24">      
             
              <FormItem label="备注">
                       <Input
                        v-model="formDataInfo.master.remark"
                        type="textarea"
                        maxlength="100"
                        :autosize="{ minRows: 2, maxRows: 5 }"
                        placeholder="请输入备注..."
                      ></Input>
                   
                </FormItem>
        </Col>
      </Row>
              
              
              
             
      </Form>

      <Tabs>
        <!--  注意:eTable formDataInfo.artLengs.defaultList  ===artLengs=== 需要根据实际接口修改,其它不变-->
        <TabPane label="纸箱报价明细" name="name1">
          <eTable
            ref="tableFields"
            unqiue-mark="id"
            :index-menu="true"
            :col-start="0"
            :width="200"
            :row-init-data="tableInitData?tableInitData.saleboxproductpriceitemFm:{}"
            :data.sync="formDataInfo.boxArePriceItems.defaultList"
            :rules="tableFieldsValidator"
            @on-row-change="calincreaseRate"
          >
             <template slot="head"> 
              <tr>
                <!-- <th class="ivu-table-column-left" width="100">
                  <div class="ivu-table-cell">
                    <span class="">数据是否删除</span>
                  </div>
                </th> -->
                
                <th class="ivu-table-column-left" width="80">
                  <div class="ivu-table-cell">
                    <span class="">报价纸质</span>
                  </div>
                </th>  
                <th class="ivu-table-column-left" width="80">
                  <div class="ivu-table-cell">
                    <span class="">生产纸质</span>
                  </div>
                </th>  
                <th class="ivu-table-column-left" width="100">
                  <div class="ivu-table-cell">
                    <span class="">报价</span>
                  </div>
                </th>  
                <th class="ivu-table-column-left" width="190">
                  <div class="ivu-table-cell">
                    <span class="">单价数量优惠</span>
                  </div>
                </th>  
                <th class="ivu-table-column-left" width="80">
                  <div class="ivu-table-cell">
                    <span class="">上次报价	</span>
                  </div>
                </th>  
                <th class="ivu-table-column-left" width="80">
                  <div class="ivu-table-cell">
                    <span class="">	涨幅(%)</span>
                  </div>
                </th>
                <th class="ivu-table-column-left" width="100">
                  <div class="ivu-table-cell">
                    <span class="">	备注</span>
                  </div>
                </th>
                  
              </tr>  
          </template> 
           
            <template
              slot="body"
              slot-scope="{ row, index, valueChangeAssign }"
            >
              
              <!-- 报价纸质	 -->
              <td class="ivu-table-column-left" width="100">
                  <popup
                    :popupClickValidator="clickValuedate"
                    v-model="row.bpArtCode"
                    field-name="bpArtCode"
                    :disabled="false"
                    popup-name="ArtMultiBox"
                    :fill-model.sync="formDataInfo.boxArePriceItems.defaultList"
                    render-fields="bpArtId,bpArtCode,mrpArtId,mrpArtCode"
                    from-fields="id,artCode,id,artCode"
                    :index="index"
                    :init-data="itemInitData"
                    :query-params="{}"
                    @on-fill="dataFill"
                    @input="
                      value => {
                        valueChangeAssign(value, index, row, 'bpArtCode');
                      }
                    "
                  />
                </td>
                <!-- 生产纸质	 -->
              <td class="ivu-table-column-left" width="100">
                   <popup
                    v-model="row.mrpArtCode"
                    field-name="mrpArtCode"
                    :disabled="false"
                    popup-name="ArtSingleBox"
                    :fill-model.sync="formDataInfo.boxArePriceItems.defaultList"
                    render-fields="mrpArtId,mrpArtCode"
                    from-fields="id,artCode"
                    :index="index"
                    :init-data="itemInitData"
                    :query-params="{}"
                     @input="
                      value => {
                        valueChangeAssign(value, index, row, 'mrpArtCode');
                      }
                    "
                  />
                  
                </td>
                <!-- 报价	 -->
              <td class="ivu-table-column-left" width="100">
                  <Input
                    v-model="row.quotePrice"
                    @input="
                      value => {
                        valueChangeAssign(value, index, row, 'quotePrice');
                      }
                    "
                    size="small"
                    :maxlength="20"
                  ></Input>
                </td>
                <!-- 单价数量优惠 -->
              <td class="ivu-table-column-left" width="100">
                  <Input
                    v-model="row.priceLess"
                    @input="
                      value => {
                        valueChangeAssign(value, index, row, 'priceLess');
                      }
                    "
                    size="small"
                    :maxlength="40"
                    icon="md-apps"
                    @on-click="showExpression('priceLess',index)"
                  ></Input>
                </td>
                <!-- 	上次报价 -->
              <td class="ivu-table-column-left" width="100">
                  <Input
                    v-model="row.lastPrice"
                    disabled 
                    @input="
                      value => {
                        valueChangeAssign(value, index, row, 'lastPrice');
                      }
                    "
                    size="small"
                    :maxlength="20"
                  ></Input>
                </td>
                <!-- 涨幅(%) -->
              <td class="ivu-table-column-left" width="100">
                  <Input
                    v-model="row.increaseRate"
                    disabled 
                    @input="
                      value => {
                        valueChangeAssign(value, index, row, 'increaseRate');
                      }
                    "
                    size="small"
                    :maxlength="20"
                  ></Input>
                </td>
             
                  <!-- 备注 -->
              <td class="ivu-table-column-left" width="100">
                  <Input
                    v-model="row.remark"
                    @input="
                      value => {
                        valueChangeAssign(value, index, row, 'remark');
                      }
                    "
                    size="small"
                    :maxlength="20"
                  ></Input>
                </td>
            </template>
          </eTable>
        </TabPane>
      </Tabs>
    </editWindow>
    <preferential v-model="showpreferential" @preferential-ok="preferentialOk" :renderJsonStr="renderJsonStr"></preferential>

  </div>
</template>

<script>
/**
 * @desc edit-dept 描述
 * 所有重要 可以重用的方法 放在了基类,继承即可用重复使用 dyBaseMixins,
 * 可以根据需求重写所需的方法:
 *
 * @params 参数
 *
 * @return 返回
 *
 * @author Andy Huang
 *
 * @created 2019/11/20 17:07:54
 */
import preferential from "@/components/preferential/preferential";
import popup from "@/components/popup/popup";
import editWindow from "@/components/edit-window/edit-window";
// import Form from '@/components/form/form'
import eTable from "@/components/e-table/e-table";
import request from "@/libs/request";
import editBaseMixins from "../../mixins/edit";
import optionSearch from "../../components/optionSearch";
import dayjs from "dayjs";
import Sys from "@/api/sys"
const default_formDataInfo = {
        // 主表 更改字段
        master: {
          bpNo:"",
          custId:"",
          custCode:"",
          custName:"",
          effectDate: dayjs().format("YYYY-MM-DD HH:mm:ss"),
          priceUnit: "1",
          remark: ""
        },
        // 子表 artLengs 根据实际接口更改,其它不变
        boxArePriceItems: {
          addList: [], // 添加列
          defaultList: [], // 默认列
          deleteList: [], // 删除列
          updateList: [] // 更新列
        }
      }
export default {
  name: "edit-boxAreaPrice",
  mixins: [editBaseMixins],
  components: {
    editWindow,
    optionSearch,
    preferential,
    popup,
    // Form,
    eTable
  },
  data() {
    return {
      renderJsonStr:'',// 回填优惠方式 字符串
      formName:'saleboxproductpriceFm',
      currentExpressType:"", //当前打开的优惠方式类型
      showpreferential:false,
      requestBaseUrl: "/sale/boxAreaPrice", // 请求 查询 操作的基础路径
      formDataInfo:Object.assign({},default_formDataInfo),// 防止添加和更新数据提交发生冲突
          itemInitData:{
          },
      // 需要验证的数据
      ruleValidate: {
         artCode: [
          { required: true, message: "纸质代号不能为空", trigger: "blur" }
          ],
          artCS: [{ required: true, message: "层数不能为空", trigger: "blur" }]
          },

       boxArePriceItems: {
        lastPrice: [
          { required: false, message: "", trigger: "blur" },
          
        ]
      
      },
      subBoxClickIndex:-1,
      getcustid:0
    };
  },
  //监听客户弹框，如果发生变化，子表数据清空
  // watch: {
  //   getcustid:function(val,oldVal){
  //      debugger
  //      this.Initializationdata()
  //   }
  // },
  methods: {
    //判断数据是新增还是修改
    formDetailDataCall() {
      debugger
      if (this.action != 'add') {
          debugger
          this.getcustid = this.formDataInfo.master.custId
        }
    },
    //当主表客户弹框改变时促发初始化子表数据
    Initializationdata(){
      debugger
        let tableData = this.$refs["tableFields"].getCategorizeData();
        debugger
        if (this.formDataInfo.master.custId) {
          if (this.formDataInfo.master.custId != this.getcustid) {
            this.formDataInfo.boxArePriceItems.defaultList = []
           tableData.deleteList = tableData.updateList 
           tableData.updateList = []
          }
           console.log(this.$refs["tableFields"].getCategorizeData().updateList)
          this.getcustid = this.formDataInfo.master.custId
        }

      console.log(this.$refs["tableFields"].getCategorizeData())
    },
  
     
    // (本次报价-上次报价)*100/上次报价,保留两位小数
    //lastPrice 上次报价 quotePrice 本次报价
    //increaseRate 涨幅
    calincreaseRate(data){
          let increaseRate = 0;
           let lastPrice=data.row.lastPrice;
          if (lastPrice == null || lastPrice == '' || lastPrice == 0) {
            data.row.increaseRate = 0;
            return;
          } 
          let quotePrice=data.row.quotePrice;
          if(quotePrice==null || quotePrice==''){
            quotePrice=0;
          }
          lastPrice=parseFloat(lastPrice);
          quotePrice=parseFloat(quotePrice);
         // data.row.increaseRate = (data.row.lastPrice-data.row.quotePrice)*100/data.row.quotePrice
           // (本次报价-上次报价)*100/上次报价,保留两位小数
           increaseRate=(quotePrice-lastPrice)*100/lastPrice;
           data.row.increaseRate=increaseRate.toFixed(2); 
    },
    //子表弹框校验
      clickValuedate() {
        if(!this.formDataInfo.master.custCode || this.formDataInfo.master.custCode==""){
              this.$Message.error("客户不能为空");
              return false;
        }
          return true;
      },
      dataFill(fillDatas){
        debugger
        if(fillDatas && fillDatas.length == 0){
          return;
        }
        let params = {artId:'',custId:this.formDataInfo.master.custId};
        let _self = this;
        for(let i = 0;i < fillDatas.length;i++){

          if(fillDatas[i].data.bpArtId != null && fillDatas[i].data.bpArtId != ''){
            params.artId = fillDatas[i].data.bpArtId;
            request.post('/sale/boxAreaPrice/item/getLastPrice',{},params).then(res=>{
            _self.$refs.tableFields.set({lastPrice:res == null ? 0 : res.quotePrice},fillDatas[i].index);
            debugger
            console.log(res);
            });
          }
          //quotePrice
        }
        
      },
      // 回填JSON数据到优惠方式控件
    retrunJsonDataToDisCount(subBoxClickIndex) {
      debugger
       let slaveObj = this.$refs['tableFields']
       let tableData = slaveObj.get()
       this.renderJsonStr = tableData[subBoxClickIndex].priceLessStr
    },

    //打开优惠方式，参数，当前类型：
      showExpression(type,subBoxClickIndex){
        this.retrunJsonDataToDisCount(subBoxClickIndex)
        this.showpreferential = true;
        this.currentExpressType = type;
        this.subBoxClickIndex=-1;
        if(subBoxClickIndex >=0){
          this.subBoxClickIndex = subBoxClickIndex;
        }
      },
      //优惠方式的回调方式，返回参数
      preferentialOk(text,json,value){

        if(this.subBoxClickIndex == -1){
        
        }else{
          this.$refs.tableFields.set({priceLess:text,priceLessStr:json,biPriceLessStr:value},this.subBoxClickIndex);
        }
       
    },
      
      //重写父类，关闭窗口时触发事件
      closeActionTigger(){
        debugger
        this.$refs["tableFields"].reset()
      },
     // 重写父类,添加时候,清空数据
    HandleFormDataInfo(){
     this.formDataInfo=Object.assign({},default_formDataInfo)
    },
    // 重写父类,修改提交数据
    resetformDataInfo(_data) {
      let tableData = this.$refs["tableFields"].getCategorizeData();
      debugger
      this.formDataInfo.boxArePriceItems = tableData;
      if (!!_data.master.effectDate) {
        _data.master.effectDate = dayjs(_data.master.effectDate).format(
          "YYYY-MM-DD HH:mm:ss"
        );
      return this.formDataInfo;

      // if (!!_data.borthDay) {
      //   _data.borthDay = dayjs(_data.borthDay).format("YYYY-MM-DD");
      // }
      // if (!!_data.workLabourPactSDate) {
      //   _data.workLabourPactSDate = dayjs(_data.workLabourPactSDate).format(
      //     "YYYY-MM-DD"
      //   );
      // }
      // if (!!_data.workLabourPactEDate) {
      //   _data.workLabourPactEDate = dayjs(_data.workLabourPactEDate).format(
      //     "YYYY-MM-DD"
      //   );
      // }
      
      }

    }
  }
};
</script>

<style>
.cl-edit-boxArePrice .ivu-form-item {
  margin-bottom: 5px !important;
}
.cl-edit-boxArePrice .ivu-select-item {
  display: block;
}
</style>
