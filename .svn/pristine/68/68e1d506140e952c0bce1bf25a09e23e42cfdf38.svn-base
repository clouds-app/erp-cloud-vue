<style lang="less">
@import "./login.less";
</style>

<template>
  <div class="login">
    <div class="login-con">
      <Card icon="log-in" class="Cardtitel" title="用户登录" :bordered="false">
        <div class="form-con">
          <login-form @on-success-valid="handleSubmit"></login-form>
          <!-- <p class="login-tip">
            SZCLSOFT.COM AllRights Reserved
            版权所有</p>
          <p class="login-tip">
            联系方式：0755-27091958 QQ：2355353626
          </p> -->
        </div>
        <Spin size="large" fix v-if="loadding"></Spin>
      </Card>
    </div>
  </div>
</template>

<script>
import LoginForm from '_c/login-form'
import request from '@/libs/request'
import { mapActions } from 'vuex'
import { setToken, getToken, setlocalStorage,getlocalStorage } from '@/libs/util'
import { _eventBus } from '@/libs/event-bus'

export default {
  data () {
    return {
      loadding: false
    }
  },
  components: {
    LoginForm
  },
  beforeRouteEnter: (to, from, next) => {
    if (to) {
      let supertoken = to.query.supertoken
      let token = to.query.token
      if (!!supertoken && !!token) {
        let params = {
          token,
          supertoken
        }
        setToken(token)
        next(vm => {
        // debugger
        // 因为当钩子执行前，组件实例还没被创建
        // vm 就是当前组件的实例相当于上面的 this，所以在 next 方法里你就可以把 vm 当 this 来用了。
          // console.log(vm);//当前组件的实例
          vm.loginBySuperToken(params)
        })
      } else {
        next()
      }
    }
  },
  methods: {
    ...mapActions(['loginAction']),
    handleSubmit ({ companyId, password, userCode }) {
      this.loginSubmit({ companyId, password, userCode })
    },
    loginSubmit (params) {
      this.loadding = true
      let _self = this
      this.loginAction(params)
        .then(res => {
          this.showTipOrNot(res)
          this.loadding = false
          _self.$store.commit('setuserCode', params.userCode)
          _eventBus.$emit('login-success')
          _self.$router.push({ path: '/' })
          setlocalStorage('loginUserInfo', JSON.stringify(res)) // 存储登陆后返回信息
          setlocalStorage('information', JSON.stringify({ 'userCode': params.userCode, 'companyId': params.companyId}))
        }).catch(err => {
          this.loadding = false
          this.$Message.error(err.message)
        })
    },
    loginBySuperToken (params) {
      let _self = this
      this.loadding = true
      let url = `/sys/user/companyLogin`
      let data = {
        supertoken: params.supertoken
      }
      request.post(url, data).then(res => {
        this.showTipOrNot(res)
        this.loadding = false
        setToken(res.token)
        _self.$store.commit('setuserCode', res.userCode)
        _eventBus.$emit('login-success')
        _self.$router.push({ path: '/' })
        setlocalStorage('loginUserInfo', JSON.stringify(res)) // 存储登陆后返回信息
        setlocalStorage('information', JSON.stringify({ 'userCode': res.userCode, 'companyId': res.companyId, 'password': '' }))
      }).catch(err => {
        this.loadding = false
        this.$Message.error('登陆失败,请重新登陆!')
      })
    },
    // 是否显示提示
    showTipOrNot(userInfo){
      let userObj = userInfo.useTipsModel
      let _self = this 
      if(userObj && (userObj.tips || userObj.expire)){
        setTimeout(()=>{
          //this.$Message.warning(userObj.message)
            // 确认提示框 提示
            this.$Modal.warning({
            title: '提示',
            content: userObj.message,
            onOk: () => {
             
            }
          });
        },2000)
      }
    }
  }
}
</script>

<style scope>
/* .login-con{
  width:295px;
  height:343px;
  background:rgba(255,255,255,1);
  border-radius:5px;
} */
.login .ivu-card-body {
  padding: 1rem !important;
}
.Cardtitel .ivu-card-head p {
  color: #2E68EA !important;
  font-size: 20px !important;
  line-height: 23px !important;
  text-align: center !important;
}
.ivu-input-group-prepend {
  border-radius: 22px;
  background: #ffffff;
}
/* .ivu-input {
    height: 100% !important;
} */
</style>
