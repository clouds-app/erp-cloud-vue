<template>
  <div>
    <editWindow
    :draggable="false"
      :zindex="10"
      class="cl-edit-window"
      title="应付对账单明细单据"
      v-model="showWindow"
      :fullscreen="false"
      width="90%"
      :loading="false"
      :spinLoaddingText="spinLoaddingText"
      @on-ok="formTableDataSubmit()"
      v-if="initColData.columns"
      :disabledSubmitBtn="disabledSubmitBtn"
    >
      <div ref="masterHeight">
        <Form
          ref="formDataInfo"
          :show-message="true"
          :model="formDataInfo.master"
          :rules="masterRuleValidate"
          :label-width="60"
        >
          <!-- <Row>
            <Col span="6">
                <FormItem :label-width="80" label="月结类型">
                 <optionSearch
                    @onChange="optionOnChangeBy"
                    :defaultItem="formDataInfo.master.searchType"
                    :loaddingDataWhen="showWindow"
                    query="arpType "
                    formKey="searchType"
                />
                </FormItem>
            </Col>
            <Col span="6">
                <FormItem :label-width="80" :label="searchConfig.title" prop="keyWord">
                    <Input :clearable="true" maxlength="20" v-model="formDataInfo.master.keyWord" placeholder="搜索关键字"></Input>
                </FormItem>
            </Col>
              <Col span="4">
                <FormItem :label-width="20">
                    <RadioGroup v-model="formDataInfo.master.likeFlag">
                    <Radio label="1">模糊</Radio>
                    <Radio label="0">精准</Radio>
                  </RadioGroup>
                </FormItem>
            </Col>
              <Col span="9">
                <FormItem label="日期" prop="searchDay">
                   <DatePicker
                   transfer
                   style="width: 120px"
                    v-model="formDataInfo.master.startDate" 
                    type="datetime"
                    format="yyyy-MM-dd"
                  ></DatePicker> - <DatePicker
                   transfer
                   style="width: 120px"
                    v-model="formDataInfo.master.endDate" 
                    type="datetime"
                    format="yyyy-MM-dd"
                  ></DatePicker>
                </FormItem>
            </Col>
              
             <Col span="1">
                 <FormItem>
                   <Button :loading="loadingData" @click="searchDataBy()" type="primary">
                     <Icon type="md-search" />
                     搜索
                     </Button>
                </FormItem>
             
            </Col>
            </Row> -->
        </Form>
        <eTable
          ref="slave_list_table_edit"
          :showContextMenu="false"
          unqiue-mark="id"
          :height="500"
          :index-menu="true"
          :col-start="0"
          :row-init-data="{}"
          :data="formDataInfo['accPayItems'].defaultList"
          :rules="slaveTableFieldsValidator"
          @row-click="slave_list_table_editRowClick"
        >
          <template slot="head">
            <tr
              v-for="(columnGroup, index) in initColData.columns[
                `${functionParams.formInitPreName}Fm`
              ].editGroups"
              :key="index"
            >
              <template v-for="(column, index2) in columnGroup">
                <th
                  v-if="excludeFiled('itemFm', column.key)"
                  @click="searchKeyType(column.key, column.title)"
                  :key="index2"
                  :class="`ivu-table-column-${column.titleAlign}`"
                  :width="column.editWidth"
                  :colspan="column.colSpan"
                  :rowspan="column.rowSpan"
                  :columnKey="column.key"
                  :style="
                    excludeFiled('search', column.key) ? 'cursor:pointer' : ''
                  "
                >
                  <div class="ivu-table-cell">
                    <span class="">{{ column.title }}</span>
                  </div>
                </th>
              </template>
            </tr>
          </template>
          <template slot="body" slot-scope="{ row, index, valueChangeAssign }">
            <template
              v-for="(column, subIndex) in initColData.columns[
                `${functionParams.formInitPreName}Fm`
              ].editColumns"
            >
              <td
                :key="subIndex"
                :class="`ivu-table-column-${column.align}`"
                v-if="excludeFiled('itemFm', column.key)"
                :width="column.editWidth"
              >
                <!-- 控件特殊处理 订单编号 -->
                <template v-if="column.key == 'iisChose'">
                  <Checkbox
                    @on-change="onChange_SlaveItemChcBox(index)"
                    v-model="row[column.key]"
                    :disabled="column.readOnly"
                  ></Checkbox>
                </template>
                <!-- 单据类型-->
                <Select
                  @on-change="
                    value => {
                      valueChangeAssign(value, index, row, column.key);
                    }
                  "
                  :disabled="true"
                  v-else-if="column.key == 'billType'"
                  v-model="row[column.key]"
                  transfer
                >
                  <Option
                    v-for="(item, index) in accPayItemBillTypeList"
                    :key="index"
                    :value="item.dicValue + ''"
                    >{{ item.dicLabel }}</Option
                  >
                </Select>
                <!--其它 控件 -->
                <template v-else>
                  <formControl
                    :control-type="column.controlType"
                    v-model="row[column.key]"
                    :disabled="column.readOnly"
                    @input="
                      value => {
                        valueChangeAssign(value, index, row, column.key);
                      }
                    "
                  ></formControl>
                </template>
              </td>
            </template>
          </template>
        </eTable>
      </div>
    </editWindow>
  </div>
</template>

<script>
/**
 * @desc  edit-accPaySlave 描述 应付对账单明细单据
 * 所有重要 可以重用的方法 放在了基类,继承即可用重复使用 editBaseMixins,
 * 可以根据需求重写所需的方法:
 *
 * @params 参数
 *
 * @return 返回
 *
 * @author Andy Huang
 *
 * @created 2020/05/12
 */
import popup from "@/components/popup/popup";
import editWindow from "@/components/edit-window/edit-window";
import eTable from "@/components/e-table/e-table";
import request from "@/libs/request";
import editBaseMixins from "../../mixins/edit";
import optionSearch from "../../components/optionSearch";
import dayjs from "dayjs";
import Sys from "@/api/sys";
import formControl from "@/components/form-control/form-control";
import { deepCopy } from "view-design/src/utils/assist";
const default_formDataInfo = {
  // 主表 更改字段
  master: {
    keyWord: "",
    likeFlag: "1",
    searchType: "0", // 默认为  0:送退货明细
    startDate: dayjs()
      .subtract(1, "month")
      .format("YYYY-MM-DD"),
    endDate: dayjs().format("YYYY-MM-DD")
  },
  accPayItems: {
    addList: [], // 添加列
    defaultList: [], // 默认列
    deleteList: [], // 删除列
    updateList: []
  }
};
export default {
  name: "edit-accPaySlave",
  mixins: [editBaseMixins],
  components: {
    editWindow,
    optionSearch,
    eTable,
    popup,
    formControl
  },
  props: {
    // 搜索参数对象,从父类填充参数过来
    searchParams: {
      type: Object,
      default: () => {
        return {
          //  custId,// 客户id
        };
      }
    }
  },
  data() {
    return {
      accPayItemBillTypeList: [], // 应付对账单明细单据类型
      // 查询配置参数
      functionParams: {
        formInitPreName: "accpayitembox", // 查询表格列头信息 前缀 例如:saleboxproductprice Fm/Fm/mdataFm
        requestBaseUrl: "/account/accPay", // 查询 表格行 数据 接口前缀地址
        uniqueId: "apId" // 查询详细的唯一ID,需要顶部查询中使用
      },
      formDataInfo: deepCopy(default_formDataInfo), // Object.assign({}, default_formDataInfo), // 防止添加和更新数据提交发生冲突
      masterRuleValidate: {}, // 纸箱出货 需要验证的数据
      slaveTableFieldsValidator: {}, // 纸箱出货明细 需要验证的数据
      subTableFieldsValidator: {}, // 出货其他费用 需要验证的数据
      boxDeliSubItemsList: [], //工单明细列表
      masterHeight: 0, //表单高度
      otherHeight: 0, //剩余高度
      initColData: {},
      loadingData: false, // 查询中
      searchConfig: {
        title: "客户简称",
        keyField: "shortName"
      }
    };
  },
  computed: {
    // 是否禁用确认按钮
    disabledSubmitBtn() {
      let datalist = this.formDataInfo["accPayItems"].defaultList;
      if (datalist && datalist.length > 0) {
        return false;
      } else {
        return true;
      }
    }
  },
  watch: {
    showWindow: function(n, o) {
      if (n) {
        let _self = this;
        this.$nextTick(() => {
          _self.searchDataBy();
        });
      }
    }
  },
  created() {
    this.loadColumsData();
    this.getAccPayItemBillTypeList();
  },
  methods: {
    getAccPayItemBillTypeList() {
      //获取  费用类型
      this.getDataFromDictionaryBy("accPayItemBillType").then(res => {
        this.accPayItemBillTypeList = res;
      });
    },
    // 工单row选择事件回调
    onChange_SlaveItemChcBox(index) {},
    // 通过参数查询数据列表
    searchDataBy() {
      this.formDataInfo["accPayItems"].defaultList = [];
      // 参数包括：arpType(月结类型:1:送退货主档,0:送退货明细),supplierId(供应商id),startDate(起始日期),endDate(终止日期)
      let params = {
        startDate: dayjs(this.searchParams.startDate).format("YYYY-MM-DD"), //(开始日期)
        endDate: dayjs(this.searchParams.endDate).format("YYYY-MM-DD"), //(结束日期)
        supplierId: this.searchParams.supplierId, //(供应商id)
        arpType: this.searchParams.arpType, //(月结类型)
        arriveDate: dayjs(this.searchParams.arriveDate).format("YYYY-MM-DD"), //(货款到期日)
        discount: this.searchParams.discount, //(折扣)
        taxRate: this.searchParams.taxRate, //(税率)
        apMonth: dayjs(this.searchParams.apMonth).format("YYYYMM") // 月结月份
      };
      this.loadingData = true;
      request
        .post(`${this.functionParams.requestBaseUrl}/spAutoAccPay`, params)
        .then(res => {
          if (res && res.length > 0) {
            this.formDataInfo["accPayItems"].defaultList = res;
          }
          this.loadingData = false;
        })
        .catch(err => {
          this.loadingData = false;
        });
    },
    // 工单列表行点击事件回调
    slave_list_table_editRowClick(index) {},
    // 默认选择行数据
    setDefaultSelectedRow(index = 0) {
      //debugger
      let slaveObj = this.$refs["slave_list_table_edit"];
      if (slaveObj) {
        slaveObj.rowClick(index, "row-click");
      }
    },

    // 加载列头数据
    loadColumsData() {
      //纸箱出货弹出框主表数据(虚拟)
      let _self = this;
      let formName = "accpayitemboxFm";
      let url = `/sys/form/init/${formName}`;
      request.get(url).then(res => {
        if (res != null) {
          _self.initColData = res;
        }
      });
    },
    // 排除不需要显示的字段
    excludeFiled(type, key) {
      let exListItemFm = [];
      //iciArNo 单据号，shortName 简称
      let searchList = [];
      let exList = [];
      switch (type) {
        case "itemFm":
          exList = exListItemFm;
          break;
        case "search":
          exList = searchList;
          break;
        default:
          exList = [];
          break;
      }
      let isExist = exList.includes(key);
      if (type === "search") {
        isExist = !isExist;
      }
      if (isExist) {
        return false;
      } else {
        return true;
      }
    },

    // 重写父类,修改提交数据
    resetformDataInfo() {
      let choseDataList = this.formDataInfo["accPayItems"].defaultList.filter(
        item => {
          return item.iisChose == true;
        }
      );
      return choseDataList;
    },

    // 提交主从表数据
    formTableDataSubmit() {
      let submitData = this.resetformDataInfo();
      if (submitData.length > 0) {
        this.showWindow = false; // 关闭当前编辑页面
        this.$emit("submit-success", submitData); // 刷新主页面数据
      } else {
        this.$Message.error("请勾选需要操作的数据!!");
        return;
      }
    }
  }
};
</script>

<style>
.cl-edit-window .masterHeightClass {
  height: 50%;
  overflow: auto;
}
.cl-edit-window .otherHeightClass {
  height: 50%;
  overflow: hidden;
}
</style>
