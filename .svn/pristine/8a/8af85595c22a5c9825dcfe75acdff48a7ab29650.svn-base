<template>
  <div id="Bas_sun" style=" ">
    <Row>
      <Col span="1">&nbsp;</Col>
      <Col span="6" offset="1">
        <Card>
          <p slot="title">平台运维</p>
          <p style="padding: 10px;">
            <Button @click="handleSubMenuEvent('sysForm','sys-form','表单')" type="info">表单</Button>
          </p>
          <p style="padding: 10px;">
            <Button
              @click="handleSubMenuEvent('popopConfig','popop-config','弹框配置')"
              type="info"
            >弹框配置</Button>
          </p>
          <p style="padding: 10px;">
            <Button
              @click="handleSubMenuEvent('platformResource','platform-resource','资源配置')"
              type="info"
            >资源配置</Button>
          </p>
        </Card>
      </Col>
      <Col span="6">
        <Card>
          <p slot="title">系统设置</p>
          <p style="padding: 10px;">
            <Button @click="handleSubMenuEvent('sysRole','sys-role','角色')" type="info">角色</Button>
          </p>
          <p style="padding: 10px;">
            <Button @click="handleSubMenuEvent('sysUser','sys-user','用户')" type="info">用户</Button>
          </p>
          <p style="padding: 10px;">
            <Button @click="handleSubMenuEvent('sysResource','sys-resource','资源')" type="info">资源</Button>
          </p>
          <p style="padding: 10px;">
            <Button @click="handleSubMenuEvent('dic','sys-dic','数字字典')" type="info">数字字典</Button>
          </p>
          <p style="padding: 10px;">
            <Button
              @click="handleSubMenuEvent('paramConfig','sys-paramConfig','参数配置')"
              type="info"
            >参数配置</Button>
          </p>
          <p style="padding: 10px;">
            <Button @click="handleSubMenuEvent('sysCode','sys-sysCode','系统编码')" type="info">系统编码</Button>
          </p>
          <p></p>
          <p></p>
        </Card>
      </Col>
    </Row>
  </div>
</template>

<script>
import globleMixin from "@/mixins";
//import subMenuMixin from './mixins'
export default {
  mixins: [globleMixin],
  data() {
    return {};
  },
  methods: {
    // 子页面 参数: 页面.vue,唯一区别ID,TAB 标签显示名称
    handleSubMenuEvent(currentPage, uniqueKey, tabName) {
      let params = {
        menuName: "Sys",
        page: currentPage, //显示控件页面
        uniqueKey: uniqueKey,
        lable: tabName,
        isActive: true
      };
      this.handleMenuBaseEvent(params); // 调用MIXIN 共用方法
      // //  debugger
      // let subItem = {
      //   uniqueKey: uniqueKey,
      //   lable: tabName
      // }
      // let params = {
      //   type: 'Sys',
      //   page: currentPage, //显示控件页面
      //   uniqueKey: subItem.uniqueKey,
      //   lable: subItem.lable,
      //   isActive: true
      // }
      // //判断是否已经存在,不要重复添加菜单
      // let isExist = false;
      // let currentOperateMenu = this.currentSelectedSubMenu.Sys // 对应模块缓存
      // if (this.currentSelectedSubMenu && currentOperateMenu.length > 0) {
      //   currentOperateMenu.forEach((item) => {
      //     item.isActive = false //重置其它菜单为 未选中
      //     if (item.uniqueKey == params.uniqueKey) {
      //       isExist = true
      //       item.isActive = true // 当前的设置为 TRUE
      //     }
      //   })
      // }

      // // 不存在则添加 子页面
      // if (!isExist) {
      //   currentOperateMenu = Object.assign(currentOperateMenu, currentOperateMenu.push(params))
      // }
      // this.$store.commit('setCurrentSubMenu', this.currentSelectedSubMenu)
      // //打开指定页面
      // this.$emit('openSubMenu', params)
    }
  }
};
</script>

<style>
</style>
