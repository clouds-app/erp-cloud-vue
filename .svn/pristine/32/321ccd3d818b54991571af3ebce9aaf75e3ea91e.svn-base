<template>
    <div>
       <Row>
      <Col span="1">&nbsp;</Col>
    
      <Col span="6" offset="1">
        <Card>
          <p slot="title">
          纸板
          </p>
         <br/>
       
        <p style="padding: 10px;">
          <Button @click="handleSubMenuEvent('paperJoin','stock-paperJoin','纸板入库')" type="info">纸板入库</Button>
        </p>
        <p style="padding: 10px;">
          <Button @click="handleSubMenuEvent('boxUseOut','stock-boxUseOut','用料出库')" type="info">用料出库</Button>
        </p>
        <p style="padding: 10px;">
          <Button @click="handleSubMenuEvent('boxUseLost','stock-boxUseLost','用料报损')" type="info">用料报损</Button>
        </p>
        <p style="padding: 10px;">
          <Button @click="handleSubMenuEvent('boxUseBack','stock-boxUseBack','用料退仓')" type="info">用料退仓</Button>
        </p>
        <p style="padding: 10px;">
          <Button @click="handleSubMenuEvent('boxUseAdjust','stock-boxUseAdjust','纸板用料盘点')" type="info">纸板用料盘点</Button>
        </p>
        
        <p style="padding: 10px;">
          <Button @click="handleSubMenuEvent('boxUseRe','stock-boxUseRe','纸板退货')" type="info">纸板退货</Button>
        </p>

     
       </Card>
      </Col>
        <Col span="6">
      <Card>
         <p slot="title">
          纸箱
        </p>
         <br/>
        <p style="padding: 10px;">
          <Button @click="handleSubMenuEvent('boxLibIn','stock-boxLibIn','纸箱成品入库')" type="info">纸箱成品入库</Button>
        </p>
          <p style="padding: 10px;">
          <Button @click="handleSubMenuEvent('boxDeli','stock-boxDeli','纸箱出货')" type="info">纸箱出货</Button>
        </p>
        <p style="padding: 10px;">
          <Button @click="handleSubMenuEvent('boxLibLost','stock-boxLibLost','纸箱成品报损')" type="info">纸箱成品报损</Button>
        </p>
         <p style="padding: 10px;">
          <Button @click="handleSubMenuEvent('boxLibInit','stock-boxLibInit','纸箱初始入库')" type="info">纸箱初始入库</Button>
        </p>
       
        <p style="padding: 10px;">
          <Button @click="handleSubMenuEvent('boxLibCheck','stock-boxLibCheck','纸箱库存盘点')" type="info">纸箱库存盘点</Button>
        </p>
         <p style="padding: 10px;">
          <Button @click="handleSubMenuEvent('boxRe','stock-boxRe','纸箱退货')" type="info">纸箱退货</Button>
        </p>
      </Card>
      </Col>
    </Row>
    </div>
</template>

<script>
  import globleMixin from '@/mixins'
  //import subMenuMixin from './mixins'
  export default {
    mixins: [globleMixin],
    data() {
      return {

      }
    },
    methods: {
      // 子页面 参数: 页面.vue,唯一区别ID,TAB 标签显示名称
      handleSubMenuEvent(currentPage, uniqueKey, tabName) {
        //  debugger
        let subItem = {
          uniqueKey: uniqueKey,
          lable: tabName
        }
        let params = {
          type: 'Stock',
          page: currentPage, //显示控件页面
          uniqueKey: subItem.uniqueKey,
          lable: subItem.lable,
          isActive: true
        }
        //判断是否已经存在,不要重复添加菜单
        let isExist = false;
        let currentOperateMenu = this.currentSelectedSubMenu.Stock // 对应模块缓存
        if (this.currentSelectedSubMenu && currentOperateMenu.length > 0) {
          currentOperateMenu.forEach((item) => {
            item.isActive = false //重置其它菜单为 未选中
            if (item.uniqueKey == params.uniqueKey) {
              isExist = true
              item.isActive = true // 当前的设置为 TRUE
            }
          })
        }

        // 不存在则添加 子页面
        if (!isExist) {
          currentOperateMenu = Object.assign(currentOperateMenu, currentOperateMenu.push(params))
        }
        this.$store.commit('setCurrentSubMenu', this.currentSelectedSubMenu)
        //打开指定页面
        this.$emit('openSubMenu', params)

      },
    }
  }
</script>

<style>