<template>
  <div>
    <editWindow
      class="cl-edit-team"
      :title="actionLableName"
      v-model="showWindow"
      :fullscreen="false"
      width="70%"
      :loading="!isLoaddingDone"
      @on-ok="formTableDataSubmit()"
       v-if="initData.columns"
    >
      <Form
        ref="formDataInfo"
        :show-message="true"
        :model="formDataInfo.master"
        :rules="ruleValidate"
        :label-width="80"
      >
        <Row :gutter="18">
          <Col span="8">
            <FormItem label="班别编号" prop="teamCode">
              <referenceField  ref='firstFocusInput' v-model="formDataInfo.master.teamCode" :disabled="detailDisabled" maxlength="20" placeholder="请输入班别编号" :form-name="formmastername"
            :id="formDataInfo.master.id"></referenceField>
            </FormItem>
          </Col>
          <Col span="8">
            <FormItem label="班别名称" prop="teamName">
              <Input v-model="formDataInfo.master.teamName" :disabled="detailDisabled" maxlength="80" placeholder="请输入班别名称"></Input>
            </FormItem>
          </Col>
          <Col span="8">
            <FormItem label="部门" prop="deptId">
              <popup
                v-model="formDataInfo.master.deptCode"
                field-name="deptCode"
                :disabled="detailDisabled"
                popup-name="deptSingleBox"
                :fill-model.sync="formDataInfo.master"
                render-fields="deptId,deptCode,deptName"
                from-fields="id,deptCode,deptName"
                :suffix="true"
                :suffix-model="formDataInfo.master.deptName"
                @on-fill='checkValueData'
                :query-params="{}"
              ></popup>
            </FormItem>
          </Col>
          <Col span="8">
            <FormItem label="班别类型" prop="teamType">
              <optionSearch
                @onChange="optionOnChange"
                :defaultItem="formDataInfo.master.teamType"
                formKey="teamType"
                :disabled="detailDisabled"
                :loaddingDataWhen="showWindow"
                query="classType"
              />
            </FormItem>
          </Col>
          <Col span="16">
            <FormItem label="备注" prop="remark">
              <Input
                v-model="formDataInfo.master.remark"
                maxlength="100"
                :disabled="detailDisabled"
                placeholder="请输入备注..."
              ></Input>
            </FormItem>
          </Col>
        </Row>
      </Form>

        <Tabs>
        <!--  注意:eTable formDataInfo.master.box.defaultList  ===box=== 需要根据实际接口修改,其它不变-->
        <!-- 如果子表中用到了 多选弹窗框 :data.sync =-->
        <TabPane label="班别人员明细" name="name1">
          <eTable
            ref="tableFields"
            unqiue-mark="id"
            :index-menu="true"
            :col-start="0"
            :width="300"
             :height="400"
             :row-init-data="tableInitData?tableInitData.teamitemFm:{}"
            :data="formDataInfo.teamItems.defaultList"
            :rules="tableFieldsValidator"
            :showContextMenu='!detailDisabled'
          >
            <template slot="head">
              <tr>
                <th class="ivu-table-column-center" width="90">
                  <div class="ivu-table-cell">
                    <span class="">员工编号</span>
                  </div>
                </th>
                <th class="ivu-table-column-center" width="100">
                  <div class="ivu-table-cell">
                    <span class="">员工姓名</span>
                  </div>
                </th>

                <th class="ivu-table-column-center" width="90">
                  <div class="ivu-table-cell">
                    <span class="">工价</span>
                  </div>
                </th>
                 <th class="ivu-table-column-center" width="90">
                  <div class="ivu-table-cell">
                    <span class="">工分份额</span>
                  </div>
                </th>
                <th class="ivu-table-column-center" width="100">
                  <div class="ivu-table-cell">
                    <span class="">备注</span>
                  </div>
                </th>
              </tr>
            </template>
            <template slot="body" slot-scope="{ row, index, valueChangeAssign }">
              <td class="ivu-table-column-center" width="90">
                 <popup
                  v-model="row.workCode"
                  field-name="workCode"
                  :disabled="detailDisabled"
                  popup-name="WorkerAllSingBox"
                  :fill-model.sync="formDataInfo.teamItems.defaultList"
                  render-fields="workCode,workName"
                  from-fields="workCode,workName"
                  :index="index"
                  :init-data="{}"
                   :excludeParams="{'workCode$notIn':getfilter_workCode()}"
                  :query-params="{}"
                  @input="
                          value => {
                            valueChangeAssign(value, index, row, 'workCode');
                          }
                        "
                ></popup>
              </td>
              <td class="ivu-table-column-center" width="100">
                <Input
                  v-model="row.workName"
                  :disabled="true"
                  @input="
                    value => {
                      valueChangeAssign(value, index, row, 'workName');
                    }
                  "
                  size="small"
                  :maxlength="20"
                ></Input>
              </td>
              <td class="ivu-table-column-center" width="90">
                <Input
                  v-model="row.workPrice"
                  :disabled="detailDisabled"
                  @input="
                    value => {
                      valueChangeAssign(value, index, row, 'workPrice');
                    }
                  "
                  size="small"
                  :maxlength="20"
                ></Input>
              </td>
               <td class="ivu-table-column-center" width="90">
                <Input
                  v-model="row.quotient"
                  :disabled="detailDisabled"
                  @input="
                    value => {
                      valueChangeAssign(value, index, row, 'quotient');
                    }
                  "
                  size="small"
                  :maxlength="20"
                ></Input>
              </td>
              <td class="ivu-table-column-center" width="100">
                <Input
                  v-model="row.remark"
                  :disabled="detailDisabled"
                  @input="
                    value => {
                      valueChangeAssign(value, index, row, 'remark');
                    }
                  "
                  size="small"
                  :maxlength="20"
                ></Input>
              </td>
            </template>
          </eTable>
        </TabPane>
      </Tabs>
    </editWindow>
  </div>
</template>

<script>
/**
 * @desc edit-dept 描述
 * 所有重要 可以重用的方法 放在了基类,继承即可用重复使用 dyBaseMixins,
 * 可以根据需求重写所需的方法:
 *
 * @params 参数
 *
 * @return 返回
 *
 * @author Andy Huang
 *
 * @created 2019/11/20 17:07:54
 */
import referenceField from '@/components/referenceField/referenceField'
import popup from '@/components/popup/popup'
import optionSearch from '../../components/optionSearch'
import editBaseMixins from '../../mixins/edit'
import { customValidator, uniqueValidator } from '@/libs/validator'

const default_formDataInfo = {
  master: {
    teamCode: '',
    teamName: '',
    teamType: '1',
    deptId: '',
    deptCode: '',
    deptName: ''
  },
  // 子表 box 根据实际接口更改，其他不变
  teamItems: {
    addList: [], // 添加列
    defaultList: [], // 默认列
    deleteList: [], // 删除列
    updateList: [] // 更新列
  }
}
export default {

  actionSubtitle: '班别', // 当前操作副标题
  name: 'edit-team',
  mixins: [editBaseMixins],
  components: { optionSearch, popup, referenceField },
  data () {
    return {
      actionSubtitle: '班别',
      formName: "teamitemFm", // 重写父类 查询表单名称
      formmastername: 'teamFm',
      requestBaseUrl: '/bas/team', // 请求 查询 操作的基础路径
      formDataInfo: Object.assign({}, default_formDataInfo), // 防止添加和更新数据提交发生冲突
      // 需要验证的数据
      ruleValidate: {
        deptId: [
          { required: true, message: '所属部门不能为空', trigger: 'blur' }

        ],
        teamCode: [
          { required: true, message: '班别编号不能为空', trigger: 'blur' },
          { validator: customValidator, trigger: 'blur', customRule: ['identifier'], fieldDesc: '班组编号' },
          {
            validator: uniqueValidator,
            trigger: 'blur',
            fieldDesc: '班别编号',
            params: {
              fieldName: 'teamCode',
              formName: 'teamFm',
              id: () => {
                return this.formDataInfo.master.id
              }
            }
          }
        ],
        teamName: [
          { required: true, message: '班别名称不能为空', trigger: 'blur' },
          { validator: customValidator, trigger: 'blur', customRule: ['toCDB', 'spaceStr'], fieldDesc: '班组名称' }
        ],
        teamType: [
          { required: true, message: '班别类型不能为空', trigger: 'blur' }
        ]
      }
    }
  },

  methods: {
     // 員工過濾
    getfilter_workCode(){
      if(!!this.$refs.tableFields){
       let dataList = this.$refs.tableFields.get()
       let filterCode = ''
       dataList.filter(item=>{
         if (!!item.workCode) {
           filterCode += item.workCode+','
         }
       })
       return filterCode.substr(0,filterCode.length-1)
      }
      return ''
    },
    // 重写父类,添加时候,清空数据
    HandleFormDataInfo () {
      this.formDataInfo = Object.assign({}, default_formDataInfo)
    },
     // 重写父类,修改提交数据
    resetformDataInfo (_data) {
      let tableData = this.$refs['tableFields'].getCategorizeData()
      // debugger
      this.formDataInfo.teamItems = tableData
      return this.formDataInfo
    },
    
  }
}
</script>

<style>
.cl-edit-team .ivu-select-item {
  display: block;
}
</style>
