<template>
  <div>
    <editWindow
      class="cl-edit-machine"
      :title="actionLableName"
      v-model="showWindow"
      :fullscreen="false"
      width="60%"
      :loading="!isLoaddingDone"
      @on-ok="formDataSubmit()"
    >
      <Form
        ref="formDataInfo"
        :show-message="true"
        :model="formDataInfo"
        :rules="ruleValidate"
        :label-width="120"
      >
        <Row :gutter="18">
          <Col span="12">
            <FormItem label="机台编号" prop="moCode">
              <referenceField v-model="formDataInfo.moCode" maxlength="20" placeholder="请输入机台编号" :form-name="formmastername"
            :id="formDataInfo.id"></referenceField>
            </FormItem>
          </Col>
          <Col span="12">
            <FormItem label="机台名称" prop="moName">
              <Input v-model="formDataInfo.moName" maxlength="20" placeholder="机台名称"></Input>
            </FormItem>
          </Col>
          <Col span="12">
            <FormItem label="产能单位" prop="bwpiUnit">
              <optionSearch
                @onChange="optionOnChange"
                :defaultItem="formDataInfo.bwpiUnit"
                :loaddingDataWhen="showWindow"
                formKey="bwpiUnit"
                query="bwpiUnit"
              />

              <!-- <Input
                v-model="formDataInfo.bwpiUnitText"
                maxlength="20"
                placeholder="请输入产能单位"
              ></Input>-->
            </FormItem>
          </Col>
          <Col span="12">
            <FormItem label="工作参量" prop="bwpiParamNum">
              <InputNumber
                v-model="formDataInfo.bwpiParamNum"
                :formatter="value => ` ${value}`.replace(/\B(?=(\d{3})+(?!\d))/g, ',')"
                :parser="value => value.replace(/\$\s?|(,*)/g, '')"
                style="width:100%"
                maxlength="20"
                placeholder="工作参量"
              ></InputNumber>
            </FormItem>
          </Col>
          <Col span="12">
            <FormItem label="换单间隔" prop="moInteral">
              <InputNumber
                v-model="formDataInfo.moInteral"
                :formatter="value => ` ${value}`.replace(/\B(?=(\d{3})+(?!\d))/g, ',')"
                :parser="value => value.replace(/\$\s?|(,*)/g, '')"
                style="width:100%"
                maxlength="20"
                placeholder="换单间隔(分钟)"
              ></InputNumber>
            </FormItem>
          </Col>
          <Col span="12">
            <FormItem label="机台类型" prop="moTypeText">
              <optionSearch
                @onChange="optionOnChange"
                :defaultItem="formDataInfo.moType"
                :loaddingDataWhen="showWindow"
                formKey="moType"
                query="wpType"
              />
            </FormItem>
          </Col>
          <Col span="12">
            <FormItem label="最大尺寸长mm" prop="maxLength">
              <InputNumber
                v-model="formDataInfo.maxLength"
                :formatter="value => ` ${value}`.replace(/\B(?=(\d{3})+(?!\d))/g, ',')"
                :parser="value => value.replace(/\$\s?|(,*)/g, '')"
                style="width:100%"
                maxlength="20"
                placeholder="最大尺寸长mm"
              ></InputNumber>
            </FormItem>
          </Col>
          <Col span="12">
             <FormItem label="最大尺寸宽mm" prop="maxWidth">
                <InputNumber
                  v-model="formDataInfo.maxWidth"
                  :formatter="value => ` ${value}`.replace(/\B(?=(\d{3})+(?!\d))/g, ',')"
                  :parser="value => value.replace(/\$\s?|(,*)/g, '')"
                  style="width:100%"
                  maxlength="20"
                  placeholder="最大尺寸宽mm"
                ></InputNumber>
            </FormItem>
          </Col>
          <Col span="12">
            <FormItem label="最小尺寸长mm" prop="minLength">
              <InputNumber
                v-model="formDataInfo.minLength"
                :formatter="value => ` ${value}`.replace(/\B(?=(\d{3})+(?!\d))/g, ',')"
                :parser="value => value.replace(/\$\s?|(,*)/g, '')"
                style="width:100%"
                maxlength="20"
                placeholder="最小尺寸长"
              ></InputNumber>
            </FormItem>
          </Col>
          <Col span="12">
            <FormItem label="最小尺寸宽mm" prop="minWidth" >
              <InputNumber
                v-model="formDataInfo.minWidth"
                :formatter="value => ` ${value}`.replace(/\B(?=(\d{3})+(?!\d))/g, ',')"
                :parser="value => value.replace(/\$\s?|(,*)/g, '')"
                style="width:100%"
                maxlength="20"
                placeholder="最小尺寸宽"
              ></InputNumber>
            </FormItem>
          </Col>
          <Col span="12">
            <FormItem label="备注" prop="remark">
              <Input
                v-model="formDataInfo.remark"
                type="textarea"
                maxlength="100"
                :autosize="{ minRows: 2, maxRows: 5 }"
                placeholder="请输入备注..."
              ></Input>
            </FormItem>
          </Col>
        </Row>
      </Form>
    </editWindow>
  </div>
</template>

<script>
/**
 * @desc edit-dept 描述
 * 所有重要 可以重用的方法 放在了基类,继承即可用重复使用 dyBaseMixins,
 * 可以根据需求重写所需的方法:
 *
 * @params 参数
 *
 * @return 返回
 *
 * @author Andy Huang
 *
 * @created 2019/11/20 17:07:54
 */
import optionSearch from "../../components/optionSearch";
import editBaseMixins from "../../mixins/edit";
import referenceField from '@/components/referenceField/referenceField'
import { customValidator, uniqueValidator } from "@/libs/validator";

const default_formDataInfo = {
  moCode: "",
  moName: "",
  bwpiUnitText: "",
  moInteral: 0,
  remark: "",
  bwpiParamNum:1 ,
  bwpiUnit: "",
  maxLength:0,
  maxWidth: 0,
  minLength:0 ,
  minWidth:0, 
};
export default {
  name: "edit-machine",
  mixins: [editBaseMixins],
  components: { optionSearch, optionSearch,referenceField },
  data() {
    return {
      formmastername:'machine',
      actionSubtitle:'机台', // 当前操作副标题
      requestBaseUrl: "/bas/machine", // 请求 查询 操作的基础路径
      formDataInfo: Object.assign({}, default_formDataInfo), // 防止添加和更新数据提交发生冲突
      // 需要验证的数据
      ruleValidate: {
        bwpiParamNum: [ {
            validator:customValidator,
            trigger: "blur",
            customRule:["mustDouble"],
            fieldDesc:"工作参量"
          }
        ],
        moInteral: [ {
            validator:customValidator,
            trigger: "blur",
            customRule:["mustDouble"],
            fieldDesc:"换单间隔"
          }
        ],
        maxLength: [ {
            validator:customValidator,
            trigger: "blur",
            customRule:["mustDouble"],
            fieldDesc:"maxLength"
          }
        ],
        maxWidth: [ {
            validator:customValidator,
            trigger: "blur",
            customRule:["mustDouble"],
            fieldDesc:"最大尺寸宽"
          }
        ],
        minLength: [ {
            validator:customValidator,
            trigger: "blur",
            customRule:["mustDouble"],
            fieldDesc:"最小尺寸长"
          }
        ],
        minWidth: [ {
            validator:customValidator,
            trigger: "blur",
            customRule:["mustDouble"],
            fieldDesc:"最小尺寸宽"
          }
        ],
        moCode: [
          { required: true, message: "机台编号不能为空", trigger: "blur" },
          {
            validator: customValidator,
            trigger: "blur",
            customRule: ["identifier"],
            fieldDesc: "机台编号"
          },
          {
            validator: uniqueValidator,
            trigger: "blur",
            fieldDesc: "机台编号",
            params: {
              fieldName: "moCode",
              formName: "machine",
              id: () => {
                return this.formDataInfo.id;
              }
            }
          }
        ],
        moName: [
          { required: true, message: "机台名称不能为空", trigger: "blur" },
          {
            validator: customValidator,
            trigger: "blur",
            customRule: ["toCDB", "spaceStr"],
            fieldDesc: "机台名称"
          }
        ]
      }
    };
  },

  methods: {
    // 重写父类,添加时候,清空数据
    HandleFormDataInfo() {
      this.formDataInfo = Object.assign({}, default_formDataInfo);
    }
  }
};
</script>

<style>
.cl-edit-machine.ivu-select-item {
  display: block;
}

</style>
