<template>
  <div>
    <editWindow
      class="cl-edit-invoiceCheck"
      :title="actionLableName"
      v-model="showWindow"
      :fullscreen="true"
      width="90%"
      :loading="!isLoaddingDone"
      :spinLoaddingText="spinLoaddingText"
      @on-ok="formTableDataSubmit()"
      v-if="initData.columns"
      :disabledSubmitBtn="disabledSubmitBtn"
    >
    
      <div @contextmenu.prevent ref="masterHeight" class="masterHeightClass" :style="{ height: getMasterheight() + '%' }" >  
        <Form
            ref="formDataInfo"
            :show-message="true"
            :model="formDataInfo.master"
            :rules="masterRuleValidate"
            :label-width="80"
            :disabled="detailDisabled"
        >
            <Row>
            <Col span="6">
                <FormItem label="开票单号" prop="brNo">
                    <Input :disabled="true" v-model="formDataInfo.master.icNo" maxlength="80" placeholder="开票单号"></Input>
                </FormItem>
            </Col>
            <Col span="6">
                <FormItem  label="单据日期" prop="icDate">
                   <DatePicker
                    @on-change="onChange_icDate"
                   transfer
                   :clearable="false"
                    :value="formDataInfo.master.icDate" 
                    type="date"
                    format="yyyy-MM-dd"
                  ></DatePicker>
                </FormItem>
            </Col>
            <Col span="6">
                <FormItem label="客户编号" prop="custCode">
                  <popup 
                    v-model="formDataInfo.master.custCode"
                    field-name="custCode"
                    :disabled="false"
                    popup-name="CustomerCommonSingleBox"
                    :fill-model.sync="formDataInfo.master"
                    render-fields="custId,custCode,custName,workName"
                    from-fields="id,cusCode,cusName,saleName"
                    :suffix="true"
                    :suffix-model="formDataInfo.master.custName"
                    @on-fill="custCodeOnFillEvent"
                    />
                </FormItem>
            </Col>
            <Col span="6">
                <FormItem label="业务员" >
                     <Input :disabled="true" v-model="formDataInfo.master.workName" maxlength="40" placeholder="业务员"></Input>
                </FormItem>
            </Col>
            <Col span="6">
            <FormItem label="票价类型" prop="icInvoiceX">
               <optionSearch
                    @onChange="optionOnChangeBy"
                    :defaultItem="formDataInfo.master.icInvoiceX"
                    :loaddingDataWhen="showWindow"
                    formKey="icInvoiceX"
                    query="icInvoiceX"
                  />
            </FormItem>
          </Col>
            <Col span="6">
                <FormItem label="发票编号" prop="icInvoiceNo">
                   <Input  v-model="formDataInfo.master.icInvoiceNo" maxlength="40" placeholder="发票编号"></Input>
                </FormItem>
            </Col>
              <Col span="6">
                <FormItem :label-width="90" label="发票时间" prop="fpDate">
                     <DatePicker
                    @on-change="onChange_fpDate"
                    transfer
                    :clearable="false"
                    :value="formDataInfo.master.fpDate" 
                    type="date"
                    format="yyyy-MM-dd"
                  ></DatePicker>
                </FormItem>
            </Col>
              <Col span="6">
                <FormItem label="发票说明" prop="icRemark">
                  <Input  v-model="formDataInfo.master.icRemark" maxlength="80" placeholder="发票说明"></Input>
                </FormItem>
            </Col>
             <Col span="6">
           <FormItem :label-width="90" label="收款日期" prop="skDate">
                   <DatePicker
                    @on-change="onChange_skDate"
                    transfer
                    :clearable="false"
                    :value="formDataInfo.master.skDate" 
                    type="date"
                    format="yyyy-MM-dd"
                  ></DatePicker>
                </FormItem>
            </Col>
             <Col span="6">
                <FormItem label="总金额" prop="icMoney">
                  <InputNumber   :disabled="true" placeholder="总金额" :min="0" v-model="formDataInfo.master.icMoney"/>
                </FormItem>
            </Col>
              <Col span="6">
                <FormItem label="已冲金额" prop="writeOffAmt">
                  <InputNumber   :disabled="true" placeholder="已冲金额" :min="0" v-model="formDataInfo.master.writeOffAmt"/>
                </FormItem>
            </Col>
              <Col span="6">
                <FormItem label="未冲金额" prop="notwriteOffAmt">
                  <InputNumber   :disabled="true" placeholder="未冲金额" :min="0" v-model="formDataInfo.master.notwriteOffAmt"/>
                </FormItem>
            </Col>
            <Col span="12">
                <FormItem label="备注" prop="remark">
                   <Input v-model="formDataInfo.master.remark" maxlength="80" placeholder="备注"></Input>
                </FormItem>
            </Col>
            
            </Row>
        </Form>
      </div>
         <div ref="otherHeight" class="otherHeightClass">  
        <Tabs>
            <TabPane label="开票明细" name="stockboxdeliitem">
                <eTable
                ref="slave_list_table_edit"
                unqiue-mark="id"
                :height="otherHeight-40"
                :index-menu="true"
                :col-start="0"
                :row-init-data="initData.initData[`${functionParams.formInitPreName}ItemFm`]"
                :data="formDataInfo['invoiceCheckItems'].defaultList"
                :rules="slaveTableFieldsValidator"
                @row-delete='slave_list_table_edit_Delete'
                @tableColTiggerEventCall="tableColTiggerEventCall"
            >
            <template slot="head">
              <tr v-for="(columnGroup,index) in initData.columns[`${functionParams.formInitPreName}ItemFm`].editGroups" :key="index">
                    <template  v-for="(column,index2) in columnGroup" >
                        <th v-if="excludeFiled('ItemFm',column.key)"
                        :key="index2" :class="`ivu-table-column-${column.titleAlign}`"
                        :width="column.editWidth"
                        :colspan="column.colSpan"
                        :rowspan="column.rowSpan"
                        :columnKey="column.key"
                        >
                        <div  class="ivu-table-cell">
                        <span class="">{{column.title}}</span>
                        </div>
                    </th>
                    </template>
                </tr>
            </template>
            <template
              slot="body"
              slot-scope="{ row, index,valueChangeAssign,tableColTiggerEvent }"
            >
             <template  v-for="(column,subIndex) in initData.columns[`${functionParams.formInitPreName}ItemFm`].editColumns">
                   <td :key="subIndex" :class="`ivu-table-column-${column.align}`" v-if="excludeFiled('ItemFm',column.key)" :width="column.editWidth">
                     <!-- 控件特殊处理 工单号 -->
                      <template v-if="column.key =='iciArNo'">
                        <Input v-model="row[column.key]"  :disabled="!!row[column.key]"  @input="value => {valueChangeAssign(value, index, row,column.key)}" >
                            <Icon @click="openProductsList()"  slot="suffix" type="md-add" />
                        </Input>
                     </template>
                      <!-- 发票金额-->
                     <template  v-else-if="column.key ==='iciInvMoney'">
                        <Input v-model="row[column.key]"   @input="tableColTiggerEvent(row,column,index,'iciInvMoneyChangeEvent')">
                        </Input>
                    </template>
                       <!--其它 控件 :placeholder="column.title"-->
                     <template v-else>
                      <formControl :align="column.align" :control-type="column.controlType"
                        v-model="row[column.key]" 
                         :disabled="column.readOnly"
                        @input="value => {valueChangeAssign(value, index, row,column.key)}"
                      ></formControl>
                     </template>
                  </td>
             </template>
            </template>
             </eTable>
            </TabPane>
        </Tabs>
        </div>
    </editWindow>
    <editForm
      @on-cancel="onCancelEditForm"
      @submit-success="onSubmitEditForm"
      :isLoaddingDone="salveWindow.isLoaddingDone"
      :action="salveWindow.action"
      v-model="salveWindow.showEditWindow"
      :searchParams="searchParams"
    />
  </div>
</template>

<script>
/**
 * @desc edit-invoiceCheck 描述 发票登记
 * 所有重要 可以重用的方法 放在了基类,继承即可用重复使用 editBaseMixins,
 * 可以根据需求重写所需的方法:
 *
 * @params 参数
 *
 * @return 返回
 *
 * @author Andy Huang
 *
 * @created 2020/05/12
 */
import popup from "@/components/popup/popup";
import editWindow from "@/components/edit-window/edit-window";
import eTable from "@/components/e-table/e-table";
import request from "@/libs/request";
import editBaseMixins from "../../mixins/edit";
import optionSearch from "../../components/optionSearch";
import InputNumber from "@/components/input-number";
import dayjs from "dayjs";
import Sys from "@/api/sys";
import editForm from "./edit-invoiceCheckSlave";
import formControl from "@/components/form-control/form-control";
import { deepCopy } from "view-design/src/utils/assist";
const default_formDataInfo = {
  // 主表 更改字段
  master: {
    // auditTime: "",
		// auditUser: "",
		// auditUsername: "",
		// createTime: "",
		// createUser: "",
		// createUsername: "",
		custCode: "",
		custId: 0,
		custName: "",
		fpDate: '' ,
	 //hasDelete: false,
		icDate: new Date(dayjs().format("YYYY-MM-DD")),
		icInvoiceNo: "",
		icInvoiceX: "",
		icInvoicexText: "",
		icMoney: 0,
		icNo: "",
		icRemark: "",
    //id: 0,
    workName:'',// 业务员
		//iisAudit: 0,
		notwriteOffAmt: 0,
		remark: "",
		skDate: '',
		// status: 0,
		// updateTime: "",
		// updateUser: "",
		// updateUsername: "",
		writeOffAmt: 0
  },
  invoiceCheckItems: {
    addList: [], // 添加列
    defaultList: [], // 默认列
    deleteList: [], // 删除列
    updateList: []
  }
};
export default {
  name: "edit-boxDeli",
  mixins: [editBaseMixins],
  components: {
    editForm,
    editWindow,
    optionSearch,
    eTable,
    InputNumber,
    popup,
    formControl
  },
  data() {
    return {
      disabledSubmitBtn:false,// 是否禁用确认按钮
      formName: "accountInvoiceCheckFm", // 重写父类 查询表单名称 stockboxreitemFm
        // 查询配置参数
      functionParams: {
        formInitPreName: 'accountInvoiceCheck', // 查询表格列头信息 前缀 例如:saleboxproductprice Fm/ItemFm/mdataFm
        requestBaseUrl: '/account/invoiceCheck', // 查询 表格行 数据 接口前缀地址
        uniqueId: 'invoiceId' // 查询详细的唯一ID,需要顶部查询中使用
      },
      actionSubtitle: "发票登记", //重写父类 当前操作副标题
       salveWindow: {
        isLoaddingDone: false, // 窗口是否加载完成
        showEditWindow: false, // 是否显示edit-invoiceCheckSlave 编辑窗口
        action: "add", // 当前操作功能 添加/编辑
      },
      formDataInfo:deepCopy(default_formDataInfo),// Object.assign({}, default_formDataInfo), // 防止添加和更新数据提交发生冲突
      masterRuleValidate: { 
          custCode: [{ required: true, message: '客户编号不能为空', trigger: 'blur' }],
        //  brDate: [{ required: true,type:'date', message: '送货日期不能为空', trigger: 'blur' }],
        //  brMonthDate: [{ required: true,type:'date', message: '月结日期不能为空', trigger: 'blur' }] 
      }, // 纸箱出货 需要验证的数据
      slaveTableFieldsValidator: {}, // 纸箱出货明细 需要验证的数据
      masterHeight:0,//表单高度
      otherHeight:0,//剩余高度
      searchParams:{},//传递查询参数
       boxReTypeList:[],//退仓类型 列表
      disabledCustCode:false,// 是否禁用 客户编号
    };
  },
   watch: {
     showWindow:function(n,o){
        if(n){
          let _self = this
          this.$nextTick(()=>{
             this.registerEvent()
             this.pageResize()
               // 延迟赋值,不然数据还没有正确返回的情况下,无法绑定默认值
              setTimeout(() => {
                  this.setDefaultData()
              }, 1000);
          })
        }
      },
},
 created() {
  
  },
  methods: {
     // 弹框==确认==回调事件,返回选择的数据
     onSubmitEditForm(dataList){
       if(dataList && Array.isArray(dataList) && dataList.length>0){
          this.disabledCustCode=true // 禁用客户选择
          dataList= this.itemAdapter(dataList)
          let defaultList = this.formDataInfo['invoiceCheckItems'].defaultList
          if(defaultList[0].iciArNo==''){
              this.formDataInfo['invoiceCheckItems'].defaultList =  dataList
          }else{
            dataList.forEach(item=>{
              if(!this.checkIsExistBy(item)){
                defaultList.push(item)
              }
            })
             // 删除多余的空行
            defaultList.forEach((item,index)=>{
                if(item.iciArNo=='' || item.iciArNo==null){
                   defaultList.splice(index,1)
                }
            })
          }
       }
        this.sumTotalMoney()
     },
      // 检查列表数据是否已经存在,避免重复添加
     checkIsExistBy(item){
       let isExistIndex = this.formDataInfo['invoiceCheckItems'].defaultList.findIndex(subItem=>{
         return (subItem.iciArNo== item.iciArNo && subItem.iciNoTypeText== item.iciNoTypeText)
       })
       if(isExistIndex!=-1){
         return true
       }else{
         return false
       }
     },
       //实体转换,获取相同Key的value,个别不同的手动修改值
     itemAdapter(dataList){
        let newDataList =[]
        dataList.forEach(oldItem=>{
             let newItem =JSON.parse(JSON.stringify(this.initData.initData[`${this.functionParams.formInitPreName}ItemFm`])) 
             let newItemKeys = Object.keys(newItem)
             newItemKeys.forEach(itemKey=>{
                 newItem[itemKey]=null
                 if(oldItem[itemKey]){
                  newItem[itemKey] = oldItem[itemKey]
                 } 
             })
             //发票金额 如何为空默认设置为0
            if(!!!oldItem.iciInvMoney){
               newItem.iciInvMoney = 0
            }
             //实际金额 如何为空默认设置为0
            if(!!!oldItem.iciFactMoney){
               newItem.iciFactMoney = 0
            }
            //已开发票金额 如何为空默认设置为0
            if(!!!oldItem.iciArMoney){
               newItem.iciArMoney = 0
            }
             //未开发票金额 如何为空默认设置为0
            if(!!!oldItem.iciNotArMoney){
               newItem.iciNotArMoney = 0
            }
            //未开发票金额 = 实际金额-已开金额
            if(Number(oldItem.iciNotArMoney)!=0){
              newItem.iciInvMoney = Number(newItem.iciFactMoney) -  Number(newItem.iciArMoney)
            }
             //默认 未开发票金额 = 发票金额 却不能大于 未开发票金额
            // if(Number(oldItem.iciArMoney)==0){
            //   newItem.iciArMoney = oldItem.iciNotArMoney
            // }
           
             //====== 额外需要转换的字段S=======
            newItem.iciZk = oldItem.discount // 折扣
            newItem.iciMoney = oldItem.icMoney // 单据金额
             //====== 额外需要转换的字段E=======
            newDataList.push(newItem) 
        })
       return newDataList
     },
     // 弹框==取消==回调事件
     onCancelEditForm(){

     },
     // 订单编号 点击事件,打开选择产品列表窗口
     openProductsList(){
        this.selectedNoList=''
        this.formDataInfo['invoiceCheckItems'].defaultList.forEach(item=>{
         if(this.selectedNoList==''){
            this.selectedNoList = item.iciArNo //(单据编号)
         }else{
             this.selectedNoList += ','+item.iciArNo
         }
       })
       this.searchParams = {
          custId:this.formDataInfo.master.custId,// 客户id
          inIciArNoList:this.selectedNoList,//(过滤已选的工单号集合,多个都好隔开)
       }
       if(this.popupClickValidator()){
          this.salveWindow.showEditWindow = true
       }
     },
      // 纸箱退货明细 删除数据 回调 
      slave_list_table_edit_Delete(index){
         this.sumTotalMoney()
      },
     
      // 初始值 设置
      setDefaultData(){
        this.disabledSubmitBtn = false
        let writeOffAmt = Number(this.formDataInfo.master.writeOffAmt) 
        if(writeOffAmt>0){
          this.disabledSubmitBtn = true
        }
        if(!!!this.formDataInfo.master.icInvoiceX){
          this.formDataInfo.master.icInvoiceX='01'
        }
        if(!!this.formDataInfo.master.icDate){
          this.formDataInfo.master.icDate = new Date(dayjs(this.formDataInfo.master.icDate).format("YYYY-MM-DD")) 
        }
     },
        onChange_icDate(item){
          if(!_.isEmpty(item)){
              this.formDataInfo.master.icDate = new Date(item) 
          }
        },
        onChange_fpDate(item){
          if(!_.isEmpty(item)){
              this.formDataInfo.master.fpDate = new Date(item) 
          }
        },
        onChange_skDate(item){
           if(!_.isEmpty(item)){
              this.formDataInfo.master.skDate = new Date(item) 
          }
      },
    // 表格列值改变 回调事件处理event：{row, column, index, event,config}
        tableColTiggerEventCall (obj) {
          switch (obj.event) {  
            case 'iciInvMoneyChangeEvent':
                 // 发票金额 不能大于 未开发票金额
                 let iciInvMoney = Number(obj.row.iciInvMoney)  //发票金额
                 let iciNotArMoney = Number(obj.row.iciNotArMoney)  //未开发票金额
                 if(iciInvMoney>iciNotArMoney){
                   // this.$Message.warning('发票金额 不能大于 未开发票金额')
                     this.$Modal.warning({
                      width:"260",
                      title: '警告',
                      content: `发票金额 不能大于 未开发票金额`,
                      onOk: () => {
                        this.$refs['slave_list_table_edit'].set({ iciInvMoney: 0}, obj.index) 
                        return
                      }
                  })
                 }else{
                   // 触发修改值 直接修改原始数据 无效
                   this.$refs['slave_list_table_edit'].set({ iciInvMoney: obj.row.iciInvMoney}, obj.index)
                 }
                this.sumTotalMoney()
              break 
            default:
              break
          }
        },
     // 汇总总金额   
    sumTotalMoney(){
      let totolMoney = 0
      this.formDataInfo['invoiceCheckItems'].defaultList.forEach((item,index)=>{
            let currentRowMoney = Number (item.iciInvMoney=null?0:item.iciInvMoney)
            totolMoney= totolMoney + currentRowMoney
      })
      // 设置主表 总金额
     this.formDataInfo.master.icMoney = totolMoney
      // 设置主表 未冲金额
     this.formDataInfo.master.notwriteOffAmt = totolMoney
    },
      // 验证产品编号选择前先选择客户
    popupClickValidator () {
      if (!this.formDataInfo.master.custCode || this.formDataInfo.master.custCode == '') {
        this.$Message.error('请先选择客户编号')
        return false
      }
      return true
    },
     custCodeOnFillEvent(){
       debugger
       // 切换用户,清除明细信息
        let dataList = this.formDataInfo['invoiceCheckItems'].defaultList
        if(dataList.length>0){
           if(dataList[0].iciArNo!=null && dataList[0].iciArNo !=""){
               this.$refs["slave_list_table_edit"].deleteAllData() // 仅仅记录删除记录,
               this.formDataInfo['invoiceCheckItems'].defaultList =[]
           }
        }
     },
      // 排除不需要显示的字段
      excludeFiled(type,key){
        let exListItemFm = []
        let exList=[]
        switch (type) {
            case 'ItemFm':
              exList = exListItemFm 
              break;
            default:
              exList = exListOtherfeeFm
              break;
        }
        if(exList.includes(key)){
          return false
        }else{
          return true
        }
      }, 
    // 注册窗口事件
      registerEvent(){
         let _self = this;//赋值vue的this
          window.onresize = ()=>{
    　　　　//调用methods中的事件
            _self.pageResize();
        }
      }, 
      // 触发窗口大小变化事件
    pageResize(){
        this.$nextTick(()=>{
           this.getTabWindowHeight()
        })
    }, 
      // 获取当前TAB标签的实际高度
      getTabWindowHeight(){
         this.getMasterheight()
         // 因为使用V-SHOW 隐藏,实际还会占用高度,所以切换时,设置为0 或使用V-IF 可以不用那么麻烦,但性能较低
         if(this.$refs['masterHeight']){
            this.masterHeight = this.$refs['masterHeight'].offsetHeight 
             this.otherHeight = this.$refs['otherHeight'].offsetHeight
         }
      },
     getMasterheight(){
         return 30
    },  
    // 重写父类 关闭窗口时 触发事件
    closeActionTigger() {
      // fix 清除上次的错误提示 formDataInfo 为表单ref名称
      this.$refs["formDataInfo"].resetFields();
      this.$refs["slave_list_table_edit"].reset();
    },
    // 重写父类,添加时候,清空数据
    HandleFormDataInfo() {
      this.formDataInfo = deepCopy(default_formDataInfo)
    },
    // 重写父类,修改提交数据
    resetformDataInfo() {
      let invoiceCheckItems = this.$refs["slave_list_table_edit"].getCategorizeData()
      this.formDataInfo['invoiceCheckItems'] = invoiceCheckItems
      if (!!this.formDataInfo.master.fpDate) {
        this.formDataInfo.master.fpDate = dayjs(this.formDataInfo.master.fpDate).format("YYYY-MM-DD")
      }
      if (!!this.formDataInfo.master.icDate) {
        this.formDataInfo.master.icDate = dayjs(this.formDataInfo.master.icDate).format("YYYY-MM-DD")
      }
     if (!!this.formDataInfo.master.skDate) {
        this.formDataInfo.master.skDate = dayjs(this.formDataInfo.master.skDate).format("YYYY-MM-DD")
      }
      return this.formDataInfo
    },

    // 提交主从表数据
    formTableDataSubmit () {
       this.$refs['formDataInfo'].validate(valid => {
          if (!valid) {
            return
          }
           let submitData = this.resetformDataInfo()
            request.post(`${this.functionParams.requestBaseUrl}/saveOrUpdate`, submitData).then(res => {
              this.showWindow = false // 关闭当前编辑页面
              this.$Message.success('执行成功')
              this.$emit('submit-success') // 刷新主页面数据
            })
        
        })
     
    }
  }
 
};
</script>

<style>
.masterHeightClass{
  height: 30%;overflow:auto
}
.otherHeightClass{
  height: 70%;overflow:hidden
}
.cl-edit-invoiceCheck .ivu-form-item-label {
    text-align: right;
    vertical-align: middle;
    float: left;
    font-size: 14px;
    color: #515a6e;
    line-height: 17px;
    padding: 7px 12px 10px 0;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}
</style>
