<template>
    <div>
       <Row>
      <Col span="1">&nbsp;</Col>
    
      <Col span="6" offset="1">
      <Card>
        <p slot="title">
        采购
      </p>
         <br/>
        <p style="padding: 10px;">
          <Button @click="handleSubMenuEvent('supplier','Purchase-supplier','供应商')" type="info">供应商</Button>
        </p>
        <p style="padding: 10px;">
          <Button @click="handleSubMenuEvent('supplierArt','purchase-supplierArt','供应商纸质')" type="info">供应商纸质</Button>
        </p>
        <p style="padding: 10px;">
          <Button @click="handleSubMenuEvent('paperPrice','purchase-paperPrice','纸板进价')" type="info">纸板进价</Button>
        </p>
        <p style="padding: 10px;">
          <Button @click="handleSubMenuEvent('purPaperPo','purchase-purPaperPo','纸板采购')" type="info">纸板采购</Button>
        </p>
      </Card>
      </Col>
        <Col span="6">
      <Card>
        <!-- <p slot="title">模块数据</p> -->
         <br/>
        
     
      </Card>
      </Col>
    </Row>
    </div>
</template>

<script>
  import globleMixin from '@/mixins'
  //import subMenuMixin from './mixins'
  export default {
    mixins: [globleMixin],
    data() {
      return {

      }
    },
    methods: {
      // 子页面 参数: 页面.vue,唯一区别ID,TAB 标签显示名称
      handleSubMenuEvent(currentPage, uniqueKey, tabName) {
         let params = {
              menuName: 'Purchase',
              page: currentPage, //显示控件页面
              uniqueKey: uniqueKey,
              lable: tabName,
              isActive: true
            };
      this.handleMenuBaseEvent(params) // 调用MIXIN 共用方法
        // //  debugger
        // let subItem = {
        //   uniqueKey: uniqueKey,
        //   lable: tabName
        // }
        // let params = {
        //   type: 'Purchase',
        //   page: currentPage, //显示控件页面
        //   uniqueKey: subItem.uniqueKey,
        //   lable: subItem.lable,
        //   isActive: true
        // }
        // //判断是否已经存在,不要重复添加菜单
        // let isExist = false;
        // let currentOperateMenu = this.currentSelectedSubMenu.Purchase // 对应模块缓存
        // if (this.currentSelectedSubMenu && currentOperateMenu.length > 0) {
        //   currentOperateMenu.forEach((item) => {
        //     item.isActive = false //重置其它菜单为 未选中
        //     if (item.uniqueKey == params.uniqueKey) {
        //       isExist = true
        //       item.isActive = true // 当前的设置为 TRUE
        //     }
        //   })
        // }

        // // 不存在则添加 子页面
        // if (!isExist) {
        //   currentOperateMenu = Object.assign(currentOperateMenu, currentOperateMenu.push(params))
        // }
        // let menuConfig = {
        //     isNew:!isExist,
        //     topMenu:params.type,
        //     subMenu:uniqueKey, 
        // }
        // this.$store.commit('setOperationConfig', menuConfig)
        // this.$store.commit('setCurrentSubMenu', this.currentSelectedSubMenu)
        // //打开指定页面
        // this.$emit('openSubMenu', params)

      },
    }
  }
</script>

<style>