<template>
  <div>
    <editWindow
      class="cl-edit-window"
      :title="actionLableName"
      v-model="showWindow"
      :fullscreen="true"
      width="90%"
      :loading="!isLoaddingDone"
      :spinLoaddingText="spinLoaddingText"
      @on-ok="formTableDataSubmit()"
      v-if="initData.columns"
    >
      <div ref="masterHeight" class="masterHeightClass" :style="{ height: getMasterheight() + '%' }" >  
        <Form
            ref="formDataInfo"
            :show-message="true"
            :model="formDataInfo.master"
            :rules="ruleValidate"
            :label-width="100"
        >
            <Row>
            <Col span="6">
                <FormItem label="送货单号" prop="boNo">
                </FormItem>
            </Col>
            <Col span="6">
                <FormItem label="领料人" prop="workerCode">
                </FormItem>
            </Col>
            <Col span="6">
                <FormItem label="仓位" prop="stationCode">
                </FormItem>
            </Col>

            <Col span="6">
                <FormItem label="数量" prop="boQty">
                </FormItem>
            </Col>
            <Col span="18">
                <FormItem label="备注">
            
                </FormItem>
            </Col>
            </Row>
        </Form>
      </div>
         <div ref="otherHeight" class="otherHeightClass">  
        <Tabs>
            <TabPane label="纸箱出货明细" name="stockboxdeliitem">
                <eTable
                :showContextMenu="false"
                ref="slave_list_table_edit"
                unqiue-mark="id"
                :height="otherHeight-40"
                :index-menu="true"
                :col-start="0"
                :row-init-data="initData.initData[`${functionParams.formInitPreName}itemFm`]"
                :data="formDataInfo['boxDeliItems'].defaultList"
                :rules="slaveTableFieldsValidator"
            >
            <template slot="head">
              <tr v-for="(columnGroup,index) in initData.columns[`${functionParams.formInitPreName}itemFm`].editGroups" :key="index">
                    <template  v-for="(column,index2) in columnGroup" >
                        <th v-if="excludeFiled('itemFm',column.key)"
                        :key="index2" class="ivu-table-column-left"
                        :width="column.editWidth"
                        :colspan="column.colSpan"
                        :rowspan="column.rowSpan"
                        :columnKey="column.key"
                        style="text-align:center;"
                        >
                        <div  class="ivu-table-cell">
                        <span class="">{{column.title}}</span>
                        </div>
                    </th>
                    </template>
                </tr>
            </template>
            <template
              slot="body"
              slot-scope="{ row, index,valueChangeAssign }"
            >
             <template  v-for="(column,subIndex) in initData.columns[`${functionParams.formInitPreName}itemFm`].editColumns">
                   <td :key="subIndex" class="ivu-table-column-left" v-if="excludeFiled('itemFm',column.key)" :width="column.editWidth">
                    <formControl :control-type="column.controlType"
                    v-model="row[column.key]" :disabled="true"
                    @input="value => {valueChangeAssign(value, index, row,column.key)}"
                    ></formControl>
                  </td>
             </template>
            </template>
             </eTable>
            </TabPane>
            <TabPane label="出货其他费用" name="boxDeliOtherFee">
                <eTable
                :showContextMenu="false"
                ref="slave_list_table_edit"
                unqiue-mark="id"
                :height="otherHeight-40"
                :index-menu="true"
                :col-start="0"
                :row-init-data="initData.initData[`${functionParams.formInitPreName}otherfeeFm`]"
                :data="formDataInfo['boxDeliOtherFee'].defaultList"
                :rules="slaveTableFieldsValidator"
            >
            <template slot="head">
              <tr v-for="(columnGroup,index) in initData.columns[`${functionParams.formInitPreName}otherfeeFm`].editGroups" :key="index">
                    <template  v-for="(column,index2) in columnGroup" >
                        <th v-if="excludeFiled('otherfeeFm',column.key)"
                        :key="index2" class="ivu-table-column-left"
                        :width="column.editWidth"
                        :colspan="column.colSpan"
                        :rowspan="column.rowSpan"
                        :columnKey="column.key"
                        style="text-align:center;"
                        >
                        <div  class="ivu-table-cell">
                        <span class="">{{column.title}}</span>
                        </div>
                    </th>
                    </template>
                </tr>
            </template>
            <template
              slot="body"
              slot-scope="{ row, index,valueChangeAssign }"
            >
             <template  v-for="(column,subIndex) in initData.columns[`${functionParams.formInitPreName}otherfeeFm`].editColumns">
                   <td :key="subIndex" class="ivu-table-column-left" v-if="excludeFiled('otherfeeFm',column.key)" :width="column.editWidth">
                    <formControl :control-type="column.controlType"
                    v-model="row[column.key]" :disabled="true"
                    @input="value => {valueChangeAssign(value, index, row,column.key)}"
                    ></formControl>
                  </td>
             </template>
            </template>
             </eTable>
            </TabPane>
        </Tabs>
        </div>
    </editWindow>
    <boxDeliSlave
      ref="boxDeliSlave"
      :isLoaddingDone="salveWindow.isLoaddingDone"
      :formDetailData="salveWindow.formDetailData"
      :action="salveWindow.action"
      v-model="salveWindow.showEditWindow"
    />
  </div>
</template>

<script>
/**
 * @desc edit-boxDeli 描述 纸箱出货
 * 所有重要 可以重用的方法 放在了基类,继承即可用重复使用 editBaseMixins,
 * 可以根据需求重写所需的方法:
 *
 * @params 参数
 *
 * @return 返回
 *
 * @author Andy Huang
 *
 * @created 2020/04/10
 */
import popup from "@/components/popup/popup";
import editWindow from "@/components/edit-window/edit-window";
import eTable from "@/components/e-table/e-table";
import request from "@/libs/request";
import editBaseMixins from "../../mixins/edit";
import optionSearch from "../../components/optionSearch";
import dayjs from "dayjs";
import Sys from "@/api/sys";
import formControl from "@/components/form-control/form-control";
import boxDeliSlave from "./edit-boxDeliSlave";
import { deepCopy } from "view-design/src/utils/assist";
const default_formDataInfo = {
  // 主表 更改字段
  master: {
        bdCarNo: "",
		bdCube: 0,
		bdDate: "",
		bdDeAddr: "",
		bdDecAmount: 0,
		bdDecReason: "",
		bdFeer: 0,
		bdIsAcc: true,
		bdIsSelf: true,
		bdMoney: 0,
		bdMonthDate: "",
		bdNo: "",
		bdSaleCode: "",
		bdSaleId: 0,
		bdSaleName: "",
		bdWeight: 0,
		carDriverCode: "",
		carDriverId: 0,
		carDriverName: "",
		companyId: 0,
		createTime: "",
		createUser: "",
		createUsername: "",
		custCode: "",
		custId: 0,
		custName: "",
		followCarCode: "",
		followCarId: 0,
		followCarName: "",
		followerCode: "",
		followerId: 0,
		followerName: "",
		loadorCode: "",
		loadorId: 0,
		loadorName: "",
		remark: "",
		senderCode: "",
		senderId: 0,
		senderName: "",
		status: 0
  },
  boxDeliItems: {
    addList: [], // 添加列
    defaultList: [], // 默认列
    deleteList: [], // 删除列
    updateList: []
  },
 boxDeliOtherFee: {
    addList: [], // 添加列
    defaultList: [], // 默认列
    deleteList: [], // 删除列
    updateList: []
  }
};
export default {
  name: "edit-boxDeli",
  mixins: [editBaseMixins],
  components: {
    editWindow,
    optionSearch,
    eTable,
    popup,
    boxDeliSlave,
    formControl
  },
  data() {
    return {
      formName: "stockboxdeliFm", // 重写父类 查询表单名称
        // 查询配置参数
      functionParams: {
        formInitPreName: 'stockboxdeli', // 查询表格列头信息 前缀 例如:saleboxproductprice Fm/itemFm/mdataFm
        requestBaseUrl: '/stock/boxDeli', // 查询 表格行 数据 接口前缀地址
        uniqueId: 'bdId' // 查询详细的唯一ID,需要顶部查询中使用
      },
      actionSubtitle: "纸箱出货", // 当前操作副标题
      salveWindow: {
        flag: null, //隐藏完结字段
        Tips: "提示：此窗口只显示有供应商纸质/纸板进价的工单！",
        isLoaddingDone: false, // 窗口是否加载完成
        showEditWindow: false, // 是否显示edit-boxSalesOrderSlave 编辑窗口
        action: "add", // 当前操作功能 添加/编辑
        formDetailData: {} // 当前表单的详细信息
      },
      formDataInfo: Object.assign({}, default_formDataInfo), // 防止添加和更新数据提交发生冲突
      ruleValidate: {}, // 需要验证的数据
      slaveTableFieldsValidator: {},
      masterHeight:0,//表单高度
      otherHeight:0,//剩余高度
    };
  },
   watch: {
     showWindow:function(n,o){
        if(n){
          let _self = this
          this.pageResize()
          this.$nextTick(()=>{
             this.registerEvent()
          })
        }
      },
  // 第一步执行 获取到 master 数据
    initData: {
      handler (n, o) {
        if (n.initData) {
          //this.formDataInfo.master = n.initData.master
        }
      },
      deep: true
    }
},
  methods: {
      // 排除不需要显示的字段
      excludeFiled(type,key){
        let exListMaster = ['custId']
        let exList=[]
        switch (type) {
            case 'itemFm':
              exList = exListMaster 
              break;
            default:
              exList=[]
              break;
        }
        if(exList.includes(key)){
          return false
        }else{
          return true
        }
      }, 
    // 注册窗口事件
      registerEvent(){
         let _self = this;//赋值vue的this
          window.onresize = ()=>{
    　　　　//调用methods中的事件
            _self.pageResize();
        }
      }, 
      // 触发窗口大小变化事件
    pageResize(){
        this.$nextTick(()=>{
           this.getTabWindowHeight()
        })
    }, 
      // 获取当前TAB标签的实际高度
      getTabWindowHeight(){
         this.getMasterheight()
         // 因为使用V-SHOW 隐藏,实际还会占用高度,所以切换时,设置为0 或使用V-IF 可以不用那么麻烦,但性能较低
         this.masterHeight = this.$refs['masterHeight'].offsetHeight 
         this.otherHeight = this.$refs['otherHeight'].offsetHeight
      },
     getMasterheight(){
         return 50
    },  
    //判断数据是新增还是修改
    formDetailDataCall() {
      if (this.action != "add") {
        
      }
    },
    // 重写父类 关闭窗口时 触发事件
    closeActionTigger() {
      // fix 清除上次的错误提示 formDataInfo 为表单ref名称
      this.$refs["formDataInfo"].resetFields();
      this.$refs["tableFields"].reset();
    },
    // 重写父类,添加时候,清空数据
    HandleFormDataInfo() {
      this.formDataInfo = Object.assign({}, default_formDataInfo);
    },
    // 重写父类,修改提交数据
    resetformDataInfo(_data) {

    },

    // 提交主从表数据
    formTableDataSubmit () {
    }
  }
 
};
</script>

<style>
.masterHeightClass{
  height: 50%;overflow:hidden
}
.otherHeightClass{
  height: 50%;overflow:hidden
}
</style>
