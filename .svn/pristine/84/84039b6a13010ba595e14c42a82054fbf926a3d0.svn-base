<template>
    <div>
        sys 
        <p>
             <Button @click="handleSubMenuEvent('sysForm','sys-form','表单')" type="info">表单</Button>
       </p>
        <p>
             <Button @click="handleSubMenuEvent('windowPopupConfig','sys-popUp-config','弹框配置')" type="info">弹框配置</Button>
       </p>
    </div>
</template>

<script>
import globleMixin from '@/mixins'
//import subMenuMixin from './mixins'
export default {
    mixins:[globleMixin],
    data() {
        return {

        }
    },
    methods:{
      // 子页面 参数: 页面.vue,唯一区别ID,TAB 标签显示名称
      handleSubMenuEvent(currentPage,uniqueKey,tabName){
        //  debugger
       let subItem = {
           uniqueKey:uniqueKey,
           lable:tabName
       }  
       let params = {
           type:'Sys',
           page:currentPage, //显示控件页面
           uniqueKey:subItem.uniqueKey,
           lable:subItem.lable,
           isActive:true
       }
       //判断是否已经存在,不要重复添加菜单
       let isExist =false;
       let currentOperateMenu= this.currentSelectedSubMenu.Sys // 对应模块缓存
       if(this.currentSelectedSubMenu && currentOperateMenu.length>0){
             currentOperateMenu.forEach((item)=>{
                 item.isActive =false //重置其它菜单为 未选中
                 if(item.uniqueKey ==params.uniqueKey){
                     isExist = true
                     item.isActive =true // 当前的设置为 TRUE
                 }
             })
       }

       // 不存在则添加 子页面
       if(!isExist){
         currentOperateMenu =Object.assign(currentOperateMenu,currentOperateMenu.push(params))
       }
       this.$store.commit('setCurrentSubMenu', this.currentSelectedSubMenu)
       //打开指定页面
       this.$emit('openSubMenu',params)
 
      },
  }
}
</script>