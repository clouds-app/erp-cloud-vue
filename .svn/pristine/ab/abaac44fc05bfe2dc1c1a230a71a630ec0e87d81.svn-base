<template>
  <div>
    <editWindow
      class="cl-edit-paperPrice"
      :title="actionLableName"
      v-model="showWindow"
      :fullscreen="false"
      width="90%"
      :loading="!isLoaddingDone"
      :spinLoaddingText="spinLoaddingText"
      @on-ok="formTableDataSubmit()"
      v-if="initData.columns"
    >
      <Form
        ref="formDataInfo"
        :show-message="true"
        :model="formDataInfo.master"
        :rules="ruleValidate"
        :label-width="100"
      >
        <Row>
          <Col span="24">
            <Row>
              <Col span="12">
                <FormItem label="供应商编号" prop="purCode">
                  <div>
                    <popup
                      @on-fill="Initializationdata"
                      v-model="formDataInfo.master.purCode"
                      field-name="purCode"
                      :disabled="detailDisabled"
                      popup-name="SupplierSingleBox"
                      :fill-model.sync="formDataInfo.master"
                      render-fields="supplierId,purCode,purName,coinCode,coinName,priceUnit,coinId"
                      from-fields="id,purCode,purName,coinCode,coinName,unitId,coinId"
                      :suffix="true"
                      :suffix-model="formDataInfo.master.purName"
                      :query-params="{}"
                    />
                  </div>
                </FormItem>
              </Col>
              <Col span="12">
                <Row>
                  <Col span="12">
                    <FormItem label="生效日期">
                      <DatePicker
                        :disabled="detailDisabled"
                        type="date"
                        format="yyyy-MM-dd HH:mm:ss"
                        v-model="formDataInfo.master.effectDate"
                      ></DatePicker>
                    </FormItem>
                  </Col>
                  <Col span="12">
                    <FormItem label="合同编号" prop="pactNo">
                      <Input
                        disabled
                        v-model="formDataInfo.master.pactNo"
                        maxlength="20"
                        placeholder
                      ></Input>
                    </FormItem>
                  </Col>
                </Row>
              </Col>
            </Row>
          </Col>

          <Col span="12">
            <Row>
              <Col span="15">
                <FormItem label="货币" prop="coinCode">
                  <div>
                    <popup
                      v-model="formDataInfo.master.coinCode"
                      field-name="coinCode"
                      :disabled="true"
                      popup-name="CoinSingleBox"
                      :fill-model.sync="formDataInfo.master"
                      render-fields="coinId,coinCode,coinName"
                      from-fields="id,coinCode,coinName"
                      :suffix="true"
                      :suffix-model="formDataInfo.master.coinName"
                      :query-params="{}"
                    />
                  </div>
                </FormItem>
              </Col>
              <Col span="9">
                <!--:defaultItem="formDataInfo.master.priceUnit" -->
                <FormItem label="计价单位" prop="priceUnit">
                  <optionSearch
                    :disabled="detailDisabled"
                    v-model="formDataInfo.master.priceUnit"
                    :loaddingDataWhen="showWindow"
                    formKey="priceUnit"
                    query="priceUnit"
                  />
                </FormItem>
              </Col>
            </Row>
          </Col>

          <Col span="12">
            <FormItem label="备注">
              <Input
                :disabled="detailDisabled"
                v-model="formDataInfo.master.remark"
                type="textarea"
                maxlength="100"
                :autosize="{ minRows: 1, maxRows: 2 }"
                placeholder="请输入备注..."
              ></Input>
            </FormItem>
          </Col>
        </Row>
      </Form>

      <Tabs>
        <!--  注意:eTable formDataInfo.artLengs.defaultList  ===artLengs=== 需要根据实际接口修改,其它不变-->
        <TabPane label="纸板进价明细" name="name1">
          <!-- :index3='index3' -->
          <eTable
            ref="tableFields"
            unqiue-mark="id"
            :index-menu="true"
            :col-start="0"
            :width="200"
            :height="300"
            :row-init-data="initData.initData.purPaperPriceItemFm"
            :data.sync="formDataInfo.purPaperPriceItemSlaves.defaultList"
            :rules="tableFieldsValidator"
            :showContextMenu="!detailDisabled"
            v-if="showWindow"
          >
            <!-- @on-row-change="calincreaseRate" -->
            <template slot="head">
              <tr
                v-for="(columnGroup,index) in initData.columns.purPaperPriceItemFm.editGroups"
                :key="index"
              >
                <th
                  class="ivu-table-column-left"
                  v-for="(column,index2) in columnGroup"
                  :key="index2"
                  :width="column.editWidth"
                  :colspan="column.colSpan"
                  :rowspan="column.rowSpan"
                  style="text-align:center;"
                >
                  <div class="ivu-table-cell">
                    <span class>{{column.title}}</span>
                  </div>
                </th>
              </tr>
            </template>

            <template slot="body" slot-scope="{ row, index, valueChangeAssign }">
              <td
                class="ivu-table-column-left"
                v-for="(column,columnIndex) in initData.columns.purPaperPriceItemFm.editColumns"
                :key="columnIndex"
                :width="column.editWidth"
                @contextmenu.prevent="show(index)"
              >
                <!-- 控件特殊处理 供应商纸质   :popupClickValidator="clickValuedate"  ,'supplierArtName$ne':row.supplierArtName-->
                <popup
                  :popupClickValidator="clickValuedate"
                  v-if="column.key=='supplierArtName'"
                  v-model="row[column.key]"
                  field-name="supplierArtName"
                  :disabled="detailDisabled"
                  popup-name="PurPaperArtMuileBox"
                  :fill-model.sync="formDataInfo.purPaperPriceItemSlaves.defaultList"
                  render-fields="supplierArtId,supplierArtName,artId,artCode,artCS,lbCode"
                  from-fields="supplierArtId,supplierArtName,artId,artCode,artCS,lbCode"
                  :index="index"
                  :init-data="initData.initData.purPaperPriceItemFm"
                  :query-params="{supplierId:formDataInfo.master.supplierId}"
                  @on-fill="dataFill"
                  @input="
                          value => {
                            valueChangeAssign(value, index, row, 'supplierArtName');
                          }
                        "
                ></popup>
                <!-- 控件特殊处理 本厂纸质 -->
                <popup
                  v-else-if="column.key=='artCode'"
                  :popupClickValidator="clickValuedate"
                  v-model="row[column.key]"
                  field-name="artCode"
                  :disabled="detailDisabled"
                  popup-name="PurPaperArtMuileBox"
                  :fill-model.sync="formDataInfo.purPaperPriceItemSlaves.defaultList"
                  render-fields="supplierArtId,supplierArtName,artId,artCode,artCS,lbCode"
                  from-fields="supplierArtId,supplierArtName,artId,artCode,artCS,lbCode"
                  :index="index"
                  :init-data="initData.initData.purPaperPriceItemFm"
                  :query-params="{supplierId:formDataInfo.master.supplierId}"
                  @on-fill="dataFill"
                  @input="
                          value => {
                            valueChangeAssign(value, index, row, 'artCode');
                          }
                        "
                ></popup>
                <!-- 控件特殊处理 楞别 -->
                <popup
                  v-else-if="column.key=='lbCode'"
                  :popupClickValidator="clickValuedate"
                  v-model="row[column.key]"
                  field-name="lbCode"
                  :disabled="detailDisabled"
                  popup-name="PaperArtLengSimgleBox"
                  :fill-model.sync="formDataInfo.purPaperPriceItemSlaves.defaultList"
                  render-fields="lbCode"
                  from-fields="lbCode"
                  :index="index"
                  @on-fill="OnlypurPaperPriceItemFm(index)"
                  :init-data="initData.initData.purPaperPriceItemFm"
                  :query-params="{artId:artid}"
                  @input="
                          value => {
                            valueChangeAssign(value, index, row, 'lbCode');
                          }
                        "
                ></popup>
                <!-- 控件特殊处理 优惠方式 -->
                <Input
                  v-else-if="column.key == 'upiPriceLess'"
                  v-model="row[column.key]"
                  :disabled="detailDisabled"
                  @input="
                        value => {
                          valueChangeAssign(value, index, row, 'upiPriceLess');
                        }
                      "
                  size="small"
                  :maxlength="40"
                  icon="md-apps"
                  @on-click="showExpression('upiPriceLess',index)"
                ></Input>
                <!-- 控件特殊处理 报价 -->
                <Input
                  v-else-if="column.key == 'quotePrice'"
                  v-model="row[column.key]"
                  number
                  type="number"
                  @on-blur="countQuotePrice(index)"
                  :disabled="detailDisabled"
                  @input="
                      value => {
                        valueChangeAssign(value, index, row, 'quotePrice');
                      }
                    "
                  size="small"
                  :maxlength="20"
                ></Input>
                <formControl
                  v-else
                  :control-type="column.controlType"
                  v-model="row[column.key]"
                  :disabled="detailDisabled||column.readOnly"
                  @input="value => {valueChangeAssign(value, index, row,column.key)}"
                ></formControl>
              </td>
            </template>
          </eTable>
        </TabPane>
      </Tabs>
    </editWindow>
    <preferential
      v-model="showpreferential"
      @preferential-ok="preferentialOk"
      :renderJsonStr="renderJsonStr"
    ></preferential>
    <!-- <referenceField :formName="formmasterName" :id="id"></referenceField> -->
  </div>
</template>

<script>
/**
 * @desc edit-dept 描述
 * 所有重要 可以重用的方法 放在了基类,继承即可用重复使用 dyBaseMixins,
 * 可以根据需求重写所需的方法:
 *
 * @params 参数
 *
 * @return 返回
 *
 * @author Andy Huang
 *
 * @created 2019/11/20 17:07:54
 */
// import rightMenu from "@/components/e-table/right-menu2"
import referenceField from "@/components/referenceField/referenceField";
import preferential from "@/components/preferential/preferential";
import popup from "@/components/popup/popup";
import editWindow from "@/components/edit-window/edit-window";
// import Form from '@/components/form/form'
import eTable from "@/components/e-table/e-table";
import request from "@/libs/request";
import editBaseMixins from "../../mixins/edit";
import optionSearch from "../../components/optionSearch";
import dayjs from "dayjs";
import Sys from "@/api/sys";
import formControl from "@/components/form-control/form-control";
const default_formDataInfo = {
  // 主表 更改字段
  master: {
    purCode: "",
    purName: "",
    pactNo: "",
    coinCode: "",
    coinName: "",
    priceUnit: "0",
    priceUnitText: "",
    effectDate: dayjs().format("YYYY-MM-DD HH:mm:ss"),
    remark: ""
  },
  // 子表 artLengs 根据实际接口更改,其它不变
  purPaperPriceItemSlaves: {
    addList: [], // 添加列
    defaultList: [], // 默认列
    deleteList: [], // 删除列
    updateList: [] // 更新列
  }
};
export default {
  name: "edit-paperPrice",
  mixins: [editBaseMixins],
  components: {
    editWindow,
    optionSearch,
    preferential,
    eTable,
    popup,
    formControl,
    referenceField
    // rightMenu
    // Form,
  },
  data() {
    return {
      index3: 0,
      showContextMenu: true,
      showEditMenu: false,
      actionSubtitle: "纸板进价", // 当前操作副标题
      renderJsonStr: "", // 回填优惠方式 字符串
      id: 0,
      formName: "purPaperPriceItemFm",
      formmasterName: "purPaperPriceFm",
      currentExpressType: "", //当前打开的优惠方式类型
      showpreferential: false,
      requestBaseUrl: "/purchase/paperPrice", // 请求 查询 操作的基础路径
      formDataInfo: Object.assign({}, default_formDataInfo), // 防止添加和更新数据提交发生冲突
      priceUnit: "", //储存上传报价的计价单位
      increaseRateData: [], //存储已经计算的涨幅
      artid:null,//储存子表纸质id
      // 需要验证的数据
      ruleValidate: {
        purCode: [
          {
            required: true,
            message: "供应商错误",
            trigger: "blur,change"
          }
        ]
      },
      tableFieldsValidator: {
        supplierArtName: [
          {
            required: true,
            message: "供应商纸质不能为空",
            trigger: "blur"
          }
        ],
        quotePrice: [
          {
            required: true,
            message: "报价不能为空",
            trigger: "blur",
            type: "number"
          }
        ]
      },
      subBoxClickIndex: -1,
      getsupplierId: 0
    };
  },
  watch: {
    //priceUnit
    "formDataInfo.master.priceUnit": function(n, o) {
      if (n != o) {
        this.optionpriceUnit(n);
      }
    }
  },
  // mounted(){
  //   this.init()
  // },
  methods: {
    //计价单位发生改变   1千平方英寸=0.645平方米
    // (本次报价-上次报价)*100/上次报价,保留两位小数
    //lastPrice 上次报价 quotePrice 本次报价
    //increaseRate 涨幅
    optionpriceUnit(n) {
      if (this.showWindow) {
        let data =[]
        let master = this.formDataInfo.master;
        if (this.action==="update") {
          data =this.formDataInfo.purPaperPriceItemSlaves.defaultList
        }else{
          data = this.$refs["tableFields"].get();
        }
        for (let index = 0; index < data.length; index++) {
          let quotePrice = data[index].quotePrice;
          let lastPrice = data[index].lastPrice
          if (n == 1) {
            quotePrice = Number(data[index].quotePrice) * 0.645;
            lastPrice = Number(data[index].lastPrice) * 0.645;
            data[index].lastPrice = lastPrice;
            data[index].quotePrice = quotePrice;
          } else {
            quotePrice = Number(data[index].quotePrice) / 0.645;
            lastPrice = Number(data[index].lastPrice) / 0.645;
            data[index].lastPrice = lastPrice;
            data[index].quotePrice = quotePrice;
          }
          quotePrice = parseFloat(quotePrice);
          let increaseRate = ((quotePrice - lastPrice) * 100) / lastPrice;
          data[index].increaseRate = increaseRate.toFixed(2);
          console.log(this.$refs["tableFields"].get())
        }
      }
    },
    //子表数据唯一检验
    OnlypurPaperPriceItemFm(i) {
      // debugger
      let constdata = this.$refs["tableFields"].get();
      for (let index = 0; index < constdata.length; index++) {
        if (i != index) {
          if (constdata[i].supplierArtName === constdata[index].supplierArtName) {
            if (constdata[i].artCode === constdata[index].artCode) {
              if (constdata[i].lbCode === constdata[index].lbCode) {
                  constdata[i].lbCode = "";
                  this.$Message.error("该数据已经存在");
              }
            }
          }
        }
      }
    },
    show(index) {
      this.index3 = index;
      // alert(this.index3)
    },
    menuEdit(index) {
      let rowData = JSON.parse(JSON.stringify(this.cloneData[index]));
      this.$emit("row-edit", index, rowData);
    },
    menuDelete(index) {
      let bakDeleteData = JSON.parse(JSON.stringify(this.cloneData[index]));
      let _self = this;
      if (this.deleteValidator) {
        this.deleteValidator(bakDeleteData, index, this.deleteRow).then(res => {
          if (res) {
            _self.deleteRow(index);
          }
        });
      } else {
        this.deleteRow(index);
      }
      this.$emit("row-delete", index, bakDeleteData);
    },
    menuInsert(index) {
      this.insertRow(index);
      this.emitRowInsert(index);
      // this.$parent.$emit("row-insert",index);
    },
    //判断数据是新增还是修改
    formDetailDataCall() {
      // debugger;
      if (this.action != "add") {
        //debugger
        this.getsupplierId = this.formDataInfo.master.supplierId;
        this.id = this.formDataInfo.master.id;
      }
    },
    //当主表客户弹框改变时促发初始化子表数据
    Initializationdata(data) {
      //debugger
      let tableData = this.$refs["tableFields"].getCategorizeData();
      if (this.formDataInfo.master.supplierId) {
        if (this.formDataInfo.master.supplierId != this.getsupplierId) {
          this.formDataInfo.purPaperPriceItemSlaves.defaultList = [];
          tableData.deleteList = tableData.updateList;
        }
        this.getsupplierId = this.formDataInfo.master.supplierId;
      }
    },
    // 重写父类 关闭窗口时 触发事件
    closeActionTigger() {
      // fix 清除上次的错误提示 formDataInfo 为表单ref名称
      this.$refs["formDataInfo"].resetFields();
      this.formDataInfo.purPaperPriceItemSlaves.defaultList =
        Array[this.initData.initData.purPaperPriceItemFm];
    },
    clickValuedate() {
      //debugger;
      if (
        !this.formDataInfo.master.purCode ||
        this.formDataInfo.master.purCode == ""
      ) {
        this.$Message.error("供应商编号不能为空");
        return false;
      }
      return true;
    },
    // (本次报价-上次报价)*100/上次报价,保留两位小数
    //lastPrice 上次报价 quotePrice 本次报价
    //increaseRate 涨幅  1千平方英寸=0.645平方米
    //计算涨幅
    countQuotePrice(index){
      // debugger
      let increaseRate = 0
      let SunData = this.$refs['tableFields'].get()
      let lastPrice = SunData[index].lastPrice
      let quotePrice = SunData[index].quotePrice
      lastPrice = parseFloat(lastPrice);
      quotePrice = parseFloat(quotePrice);
      // data.row.increaseRate = (data.row.lastPrice-data.row.quotePrice)*100/data.row.quotePrice
      // (本次报价-上次报价)*100/上次报价,保留两位小数
      increaseRate = ((quotePrice - lastPrice) * 100) / lastPrice;
      SunData[index].increaseRate = increaseRate.toFixed(2);
      if (lastPrice==0) {
        SunData[index].increaseRate = 100
      }
    },
    // (本次报价-上次报价)*100/上次报价,保留两位小数
    //lastPrice 上次报价 quotePrice 本次报价
    //increaseRate 涨幅  1千平方英寸=0.645平方米
    calincreaseRate(data,index) {
      let master = this.formDataInfo.master;
      let increaseRate = 0;
      let lastPrice = data.lastPrice;
      let SunData = this.$refs['tableFields'].get()
      if (lastPrice == null || lastPrice == "" || lastPrice == 0) {
        data.increaseRate = 100;
        data.lastPrice = 0;
        return;
      }
      if (this.priceUnit !== Number(master.priceUnit)) {
        if (this.priceUnit == 1) {
          lastPrice = Number(data.lastPrice) / 0.645;
          // SunData[index].lastPrice = lastPrice;
          // this.$refs['tableFields'].cloneData[index].lastPrice=lastPrice
          this.$refs.tableFields.set({ lastPrice:lastPrice },index);
        } else {
          lastPrice = Number(data.lastPrice) * 0.645;
          // SunData[index].lastPrice = lastPrice;
          this.$refs.tableFields.set({ lastPrice:lastPrice },index);
        }
      }
      let quotePrice = data.quotePrice;
      if (quotePrice == null || quotePrice == "") {
        quotePrice = 0;
      }
      lastPrice = parseFloat(lastPrice);
      quotePrice = parseFloat(quotePrice);
      // data.row.increaseRate = (data.row.lastPrice-data.row.quotePrice)*100/data.row.quotePrice
      // (本次报价-上次报价)*100/上次报价,保留两位小数
      increaseRate = ((quotePrice - lastPrice) * 100) / lastPrice;
      SunData[index].increaseRate = increaseRate.toFixed(2);
      // this.increaseRateData.set(data.row.increaseRate)
    },
    dataFill(fillDatas) {//index = fillDatas[0].index
      this.OnlypurPaperPriceItemFm(fillDatas[0].index);
      let tableData = this.$refs['tableFields'].get()
      this.artid = tableData[fillDatas[0].index].artId
      if (fillDatas && fillDatas.length == 0) {
        return;
      }
      let params = {
        supplierArtId: "",
        supplierId: this.formDataInfo.master.supplierId
      };
      let _self = this;
      for (let i = 0; i < fillDatas.length; i++) {
        if (
          fillDatas[i].data.supplierArtId != null &&
          fillDatas[i].data.supplierArtId != ""
        ) {
          params.supplierArtId = fillDatas[i].data.supplierArtId;
          request
            .post("/purchase/paperPrice/getEndPrice", {}, params)
            .then(res => {
              _self.$refs.tableFields.set(
                { lastPrice: res == null ? 0 : res.quotePrice },
                fillDatas[i].index
              );
              this.priceUnit = res.priceUnit;
              this.calincreaseRate(fillDatas[0].data,fillDatas[0].index)
            });
        }
      }
    },
    //打开优惠方式，参数，当前类型：
    showExpression(type, subBoxClickIndex) {
      this.retrunJsonDataToDisCount(subBoxClickIndex);
      this.showpreferential = true;
      this.currentExpressType = type;
      this.subBoxClickIndex = -1;
      if (subBoxClickIndex >= 0) {
        this.subBoxClickIndex = subBoxClickIndex;
      }
    },
    // 回填JSON数据到优惠方式控件
    retrunJsonDataToDisCount(subBoxClickIndex) {
      //debugger;
      let slaveObj = this.$refs["tableFields"];
      let tableData = slaveObj.get();
      this.renderJsonStr = tableData[subBoxClickIndex].upiPriceLessJson;
    },
    //优惠方式的回调方式，返回参数
    preferentialOk(text, json, value) {
      if (this.subBoxClickIndex == -1) {
      } else {
        this.$refs.tableFields.set(
          {
            upiPriceLess: text,
            upiPriceLessJson: json,
            upiPriceLessStr: value
          },
          this.subBoxClickIndex
        );
      }
    },

    // 重写父类,添加时候,清空数据
    HandleFormDataInfo() {
      this.formDataInfo = Object.assign({}, default_formDataInfo);
    },
    // 重写父类,修改提交数据
    resetformDataInfo(_data) {
      let tableData = this.$refs["tableFields"].getCategorizeData();
      //debugger
      this.formDataInfo.purPaperPriceItemSlaves = tableData;
      if (!!_data.master.effectDate) {
        _data.master.effectDate = dayjs(_data.master.effectDate).format(
          "YYYY-MM-DD HH:mm:ss"
        );
      }
      return this.formDataInfo;
    }
  }
};
</script>

<style>
.cl-edit-paperPrice .ivu-form-item {
  margin-bottom: 5px !important;
}
.cl-edit-paperPrice .ivu-select-item {
  display: block;
}
/* .cl-edit-paperPrice .ivu-input-type-text{
  width: 200px
}*/
.cl-edit-paperPrice .right-text {
  width: 160%;
}
</style>
