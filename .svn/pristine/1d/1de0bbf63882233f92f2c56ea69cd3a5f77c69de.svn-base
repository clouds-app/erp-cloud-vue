<template>
  <div class="cl-moudle">
    <htmlTemplate
      :currrentRowItem="currrentRowItem"
      @isLoaddingDone="getLoaddingDone"
      :requestBaseUrl="functionParams.requestBaseUrl"
      :uniqueId="functionParams.uniqueId"
      :queryParamsDefault="queryParamsDefault"
    >
    </htmlTemplate>
    <div class="demo-split" :style="{ height:tableHeight  + 'px' }">
      <Split :v-model="splitModel2" mode="vertical">
        <div slot="top" class="demo-split-pane">
          <vTable
            :height="tableHeight/2"
            ref="master_list_table"
           :columns-url="functionParams.requestColBaseUrl + '/productFm'"
            url="/bas/product/page"
            :pagination="true"
            @row-click="tableRowClick"
            :query-params="{bpDataType:0}"
          ></vTable>
        </div>
        <div slot="bottom" class="demo-split-pane" :style="{ 'padding-top': '10px' }">
          <Tabs @on-click="TabsClickEvent">
            <TabPane label="纸板规格" name="ProductMData">
              <vTable
                :height="tableHeight /2.3"
                ref="tableFieldRef"
                :table-data="tableFieldData"
                :columns-url="functionParams.requestColBaseUrl + '/productMDataFm'"
                :pagination="false"
                :column-parse="getShowColumns"
              ></vTable>
            </TabPane>

            <tabPane label="生产工序" name="ProductWorkProc">
              <vTable
                :height="tableHeight /2.3"
                ref="tableFieldRef2"
                :table-data="tableFieldData2"
                :columns-url="functionParams.requestColBaseUrl + '/productWorkProcFm'"
                :pagination="false"
              ></vTable>
            </tabPane>
          </Tabs>
        </div>
      </Split>
    </div>

    <editForm
      :isLoaddingDone="isLoaddingDone"
      :form-detail-data="formDetailData"
      moduleName="worker"
      :action="action"
      @submit-success="search()"
      v-model="showEditWindow"
      :detailDisabled="detailDisabled"
:detailConvertUpdate="detailConvertUpdate"
    />
  </div>
</template>
<script>
import vTable from "@/components/tables/vTable";
import htmlTemplate from "../components/htmlTemplate";
//import editForm from "./edit/edit-warehouse";
import listBaseMixins from "../mixins/list";
import request from "@/libs/request";

export default {
  mixins: [listBaseMixins],
  components: {
    editForm: function(resolve) {
      //组件的异步加载
      require(["./edit/edit-product"], resolve);
    },
    htmlTemplate,
    vTable
  },
  data() {
    return {
      // splitModel2:0.6,
      // who:'editForm', // 动态指定编辑控件
      tableFieldData: [], //纸板规格
      tableFieldData2: [], //产品生产工序
      currentTabName: "ProductMData", //当前TABL名称
      functionParams: {
        requestBaseUrl: "/bas/product",
        uniqueId: "productId"
      },
      // 查询参数 ,注意格式
      queryParamsDefault: [
        {
          title: "产品编号",
          code: "bpNo",
          bpNo: ""
        },
        {
          title: "产品名称",
          name: "bpName$like",
          'bpName$like': ""
        }
      ]
    };
  },
  methods: {
    // tab 点击切换事件
    TabsClickEvent(name) {
      // debugger
      this.currentTabName = name;
      if (
        this.masterRowSelection &&
        this.masterRowSelection.id != null &&
        this.masterRowSelection.id != ""
      ) {
        if (name === "ProductWorkProc") {
          this.getProductWorkProc();
        } else {
          this.getProductMData();
        }
      }
    },
    tableRowClick(rowData, rowIndex) {
      this.formDetailData = {}; // 清除上次缓存数据 增加体验良好
      this.masterRowSelection = rowData;
      if (rowData != null) {
        //debugger
        // 是否 确认 审核 反审核 删除 禁用等 提示标题 列数据
        this.currrentRowItem.rowName = rowData.bpNo + " " + rowData.bpName;
      }
      if (this.masterRowSelection) {
        this.TabsClickEvent(this.currentTabName);
      }
    },

    // 获取查询产品纸板规格列表信息
    getProductMData() {
      // debugger
      let url = `/bas/product/productMData/list`;
      let data = {
        productId: this.masterRowSelection.id
      };
      let _self = this;
      request.post(url, data).then(res => {
        //debugger
        _self.tableFieldData = res;
      });
    },
    // 获取查询产品生产工序列表信息
    getProductWorkProc(item) {
      //debugger
      let url = `/bas/product/productWorkProc/list`;
      let data = {
        productId: this.masterRowSelection.id
      };
      let _self = this;
      request.post(url, data).then(res => {
        //debugger
        _self.tableFieldData2 = res;
      });
    },
    //重写父类方法, 更新操作
    handleUpdateEvent() {
      // debugger
      this.TabsClickEvent(this.currentTabName);
    },getShowColumns(columns){
      debugger;
      if(Array.isArray(columns) && columns.length > 0){
        let hiddenColumns = {
          'bmSize':0,
          'bmSizeL':0,
          'bmSizeW':0,
          'bmKsW':0,
          'bmKsL':0,
          'bmKsTotal':0,
          'bmDoubleCut':0,
          'bmQty':0,
          'bmAdjBorder':0,
          };
        for(let i = columns.length - 1;i >= 0;i--){
          if(hiddenColumns[columns[i].key] != undefined && this.$params.isCalPaperWidth == "0"){
            columns.splice(i,1);
          }
        }
      }
      return columns;
    }
  }
};
</script>

<style></style>
