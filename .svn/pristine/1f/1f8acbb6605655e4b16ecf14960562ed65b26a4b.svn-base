<template>
  <div>
    <editWindow
      :draggable="false"
      :zindex="30"
      id="cl-edit-salesOrder"
      :title="actionLableName"
      v-model="showWindow"
      :fullscreen="false"
      width="91%"
      :loading="!isLoaddingDone"
      :spinLoaddingText="spinLoaddingText"
      @on-ok="submitFormDataEvent"
      v-if="initData.columns"
      ref="editWindow"
      :showPageConfig="true"
      @pageOnChange="pageOnChange"
    >
      <div v-if="formDataInfo.master">
        <Form
          ref="formDataInfo"
          :show-message="true"
          :model="formDataInfo.master"
          :rules="ruleValidate"
          :label-width="124"
        >
          <div class="edit-purPaperPoSlave">
            <Row>
              <Col span="5">
                <FormItem :label="title" prop="inBiWorkNo">
                  <Input
                    v-model="formDataInfo.master.inBiWorkNo"
                    maxlength="20"
                    :placeholder="title"
                  ></Input>
                </FormItem>
              </Col>
              <Col span="5">
                <FormItem label>
                  <RadioGroup v-model="formDataInfo.master.likeFlag">
                    <Radio label="1">模糊</Radio>
                    <Radio label="0">精准</Radio>
                  </RadioGroup>
                </FormItem>
              </Col>
              <Col span="8">
                <Row>
                  <Col span="12" style="width: 62%;">
                    <FormItem label="订单日期11">
                      <DatePicker
                        type="date"
                        format="yyyy-MM-dd"
                        v-model="formDataInfo.master.startDate"
                      ></DatePicker>
                    </FormItem>
                  </Col>
                  <Col span="12" style="width: 38%;">
                    <FormItem label="--" style="margin-left:-60%;">
                      <DatePicker
                        type="date"
                        format="yyyy-MM-dd"
                        v-model="formDataInfo.master.endDate"
                      ></DatePicker>
                    </FormItem>
                  </Col>
                </Row>
              </Col>
              <Col span="1">
                <FormItem label>
                  <Button type="primary" @click="clickmaster('search')">搜索</Button>
                </FormItem>
              </Col>
            </Row>
          </div>
        </Form>

        <Tabs>
          <!--  注意:eTable formDataInfo.wareHouseItems.defaultList  ===wareHouseItems=== 需要根据实际接口修改,其它不变-->
          <TabPane>
            <eTable
              ref="slave_edit-boxUseLost"
              :height="400"
              unqiue-mark="id"
              :index-menu="true"
              :col-start="0"
              :width="200"
              :row-init-data="initData.initData.boxworkinstoredtoFm"
              :data.sync="productMDatasTableDataList"
              :rules="tableFieldsValidator"
              :showContextMenu="false"
            >
              <template slot="head">
                <tr
                  v-for="(columnGroup,index) in initData.columns.boxworkinstoredtoFm.editGroups"
                  :key="index"
                >
                  <th
                    class="ivu-table-column-left"
                    v-for="(column,index2) in columnGroup"
                    :key="index2"
                    :width="column.width"
                    :colspan="column.colSpan"
                    :rowspan="column.rowSpan"
                    style="text-align:center;"
                    @click="searchKeyType(column.key,column.title)"
                    :style="excludeFiled('search',column.key)?'cursor:pointer':''"
                  >
                    <!-- <div v-if="column.key == 'bcNo'" @click="purPaperPoClick('订单编号','bcNo')" class="ivu-table-cell">
                      <span class>订单编号</span>
                    </div>
                    <div v-else-if="column.key == 'custName'" @click="purPaperPoClick('客户名称','custName')" class="ivu-table-cell">
                      <span class >客户名称</span>
                    </div>
                    <div v-else-if="column.key == 'bcCustPo'" class="ivu-table-cell">
                      <span class @click="purPaperPoClick('客户PO号','bcCustPo')">客户PO号</span>
                    </div>  -->
                    <div class="ivu-table-cell">
                      <span class>{{column.title}}</span>
                    </div>
                  </th>
                </tr>
              </template>
              <template slot="body" slot-scope="{ row, index, valueChangeAssign }">
                <td
                  :class="`ivu-table-column-${column.align}`"
                  v-for="(column,columnIndex) in initData.columns.boxworkinstoredtoFm.editColumns"
                  :key="columnIndex"
                  :width="column.width"
                >
                  <formControl
                    :control-type="column.controlType"
                    v-model="row[column.key]"
                    :disabled="column.readOnly"
                    @input="value => {valueChangeAssign(value, index, row,column.key)}"
                  ></formControl>
                </td>
              </template>
            </eTable>
          </TabPane>
        </Tabs>
        <!-- <productSpec
          v-model="productSpecShow"
          ref="productSpec"
          

          :bpMoCut="formDataInfo.master.bpMoCut"
        ></productSpec>-->
      </div>
    </editWindow>
  </div>
</template>

<script>
/**
 * @desc edit-dept 描述
 * 所有重要 可以重用的方法 放在了基类,继承即可用重复使用 dyBaseMixins,
 * 可以根据需求重写所需的方法:
 *
 * @params 参数
 *
 * @return 返回
 *
 * @author Andy Huang
 *
 * @created 2019/11/20 17:07:54
 */
import tableSelect from "@/components/table-select/table-select";
import editWindow from "@/components/edit-window/edit-window";
// import Form from '@/components/form/form'
import eTable from "@/components/e-table/e-table";
import request from "@/libs/request";
import popup from "@/components/popup/popup";
import editBaseMixins from "../../mixins/edit";
import InputNumber from "@/components/input-number";
import formControl from "@/components/form-control/form-control";
import { customValidator } from "@/libs/validator";
import calc from "@/libs/calc";
import list from "../../mixins/list";
import dayjs from "dayjs";
export default {
  name: "edit-purPaperPoSlave",
  mixins: [editBaseMixins],
  components: {
    editWindow,
    popup,
    tableSelect,
    eTable,
    InputNumber,
    formControl
  },

  created() {
    //debugger
    // console.log(this.List)
  },
  props: {
    List: {
      type: String,
      default: "0"
    },
    workNoList: {
      type: String,
      defaule: ""
    }
  },
  data() {
    return {
      productSpecShow: false,
      formDataInfo: {
        // 主表 更改字段
        master: {},
        productMDatas: {
          artCode: "",
          bcCustPo: "",
          bcNo: "",
          biBatchNo: "",
          biProdName: "",
          biProdNo: "",
          bpProBoxCode: "",
          bpProBoxId: 0,
          bpProBoxName: "",
          bpProQty: 0,
          custCode: "",
          custName: "",
          finishInQty: 0,
          proSizeHeight: 0,
          proSizeLength: 0,
          proSizeWidth: 0,
          thisInQty: 0,
          workNo: ""
        }
        // List:thsi.list
      }, // 防止添加和更新数据提交发生冲突
      // 需要验证的数据
      ruleValidate: {},
      tableFieldsValidator: {},
      WorkOrderNumber: {
        boxUseBatchNo: "", //用料批次号
        artCode: "",
        bcCustPo: "",
        bcNo: "",
        biBatchNo: "",
        biProdName: "",
        biProdNo: "",
        bpProBoxCode: "",
        bpProBoxId: 0,
        bpProBoxName: "",
        bpProQty: 0,
        custCode: "",
        custName: "",
        finishInQty: 0,
        proSizeHeight: 0,
        proSizeLength: 0,
        proSizeWidth: 0,
        thisInQty: 0,
        workNo: ""
      },
      actionSubtitle: "纸箱成品入库工单", // 当前操作副标题
      title: "客户PO号",
      formName: "boxworkinstoredtoFm",
      propvalue: "bcCustPo", //存储子表每个对应的字段
      productMDatasTableDataList: [], //存放处理过后的数据:[],
      table: [], //存储子表全部对应的字段
      bcCustPo: "",
      custName: "",
      bcNo: ""
    };
  },
  computed: {},
  methods: {
    pageOnChange(_pageNum){
      this.pageConfig.pageNum = _pageNum
      this.clickmaster()
    },
    searchKeyType(keyField,keyTitle){
      // debugger
      if(this.excludeFiled('search',keyField)){
        this.title = keyTitle
        this.propvalue = keyField
      }
    },
    //排除不显示字段样式    bcCustPo   custName  bcNo
    excludeFiled(type,key){
      // debugger
      let searchList = ['bcCustPo','custName','bcNo']
      let isExist = searchList.includes(key)
      if (isExist) {
        return true
      }else{
        return false
      }
    },
    purPaperPoClick(name, value) {
      // debugger
      this.title = name;
      this.propvalue = value;
    },
    // 获取当前搜索类型的关键字
    getCurrentKeyTypeWords(field){
        // debugger
        if(field==this.propvalue){
          return this.formDataInfo.master.inBiWorkNo
        }else{
          return ''
        }
      },
    //搜索点击事件
    clickmaster(type) {
      if(this.pageConfig.pageNum==1 || type=='search'){
          this.resetPageConfig()
          this.productMDatasTableDataList = []
      }
      let ddata = this.formDataInfo;
      if (!!ddata.master.startDate) {
        ddata.master.startDate = dayjs(ddata.master.startDate).format(
          "YYYY-MM-DD"
        );
      }
      if (!!ddata.master.endDate) {
        ddata.master.endDate = dayjs(ddata.master.endDate).format("YYYY-MM-DD");
      }
      let params = {
        startDate: ddata.master.startDate,
        endDate: this.formDataInfo.master.endDate,
        bcCustPo: this.getCurrentKeyTypeWords('bcCustPo'),
        custName: this.getCurrentKeyTypeWords('custName'),
        bcNo: this.getCurrentKeyTypeWords('bcNo'),
        workNoList:this.workNoList,
        issInput: 0,
        likeFlag: this.formDataInfo.master.likeFlag,
        pageNum:this.pageConfig.pageNum,//(当前页),
        pageSize:this.pageConfig.pageSize,//(每页显示条数)
      };

      request.post(`/stock/boxLibIn/getBoxWorkInStoreData`, params).then(res => {
        if (res && res.records && res.records.length>0) {
          this.productMDatasTableDataList.push(...res.records)
         }
         this.pageConfig.total = res.total // 赋值总条数
         this.$refs['editWindow'].pageConfig= this.pageConfig
       // this.$refs["slave_edit-boxUseLost"].cloneData = res;
      });
    },
   // 重写父类 关闭窗口时 触发事件
    closeActionTigger () {
      this.resetPageConfig()
      this.productMDatasTableDataList = []
    },
    //加载表单初始化数据
    getFormInitDataObj(data) {
      // debugger;
      var begin = new Date();
      let startDate = dayjs(
        new Date(begin.setMonth(new Date().getMonth() - 2))
      ).format("YYYY-MM-DD");
      //加载表单初始化数据
      this.formDataInfo["master"] = {
        inBiWorkNo: "",
        likeFlag: "1",
        endDate: dayjs().format("YYYY-MM-DD"),
        startDate: startDate
      };
      this.productMDatasTableDataList = []
      if(data && data.records){
        this.productMDatasTableDataList = data.records
        this.pageConfig.total = data.total // 赋值总条数
        this.$refs['editWindow'].pageConfig= this.pageConfig
      }
     // this.$refs["slave_edit-boxUseLost"].cloneData = data;
    },

    //表单数据提交事件
    submitFormDataEvent() {
      //  debugger;
      //表单数据提交事件
      // true就是有问题
      let result = this.$refs["slave_edit-boxUseLost"].validate();
      if (result) {
        return;
      }
      let parms = [];
      let submitDataObj = this.$refs["slave_edit-boxUseLost"].cloneData;
      for (let index = 0; index < submitDataObj.length; index++) {
        let Choice = this.$refs["slave_edit-boxUseLost"].cloneData[index]
          .iisChose;
        if (Choice === true) {
          parms.push(submitDataObj[index]);
        }
      }
      //提交数据
      // 向外暴露的方法:
      this.$emit("closeMain", parms);
      this.showWindow = false; // 关闭当前窗口
      // });
    }
  }
};
</script>
<style >
.ivu-form-item-text2 .ivu-form-item-content {
  margin-left: 2.8125rem !important;
}
</style>
