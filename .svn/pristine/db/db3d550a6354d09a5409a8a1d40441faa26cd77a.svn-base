<template>
  <div>
    <editWindow
      class="cl-edit-payBadDebt"
      :title="actionLableName"
      v-model="showWindow"
      :fullscreen="false"
      width="70%"
      :loading="!isLoaddingDone"
      :disabledSubmitBtn="disabledSubmitBtn"
      @on-ok="formDataSubmit()"
    >
      <Form
        ref="formDataInfo"
        :show-massage="true"
        :model="formDataInfo"
        :rules="ruleValidate"
        :label-width="100"
        :disabled="detailDisabled"
      >
        <Row type="flex">
          <Col span="8">
            <FormItem label="呆账单号" prop="bdNo">
              <Input
                :disabled="true"
                v-model="formDataInfo.bdNo"
                maxlength="80"
                placeholder="呆账单号"
              ></Input>
            </FormItem>
          </Col>
        <Col span="8">
            <FormItem label="呆账日期" prop="bdDate">
               <DatePicker
                    @on-change="onChange_bdDate"
                    transfer
                    :value="formDataInfo.bdDate"
                    type="datetime"
                    format="yyyy-MM-dd"
                  ></DatePicker>
            </FormItem>
          </Col>
          <Col span="8">
            <FormItem label="供应商编号" prop="supplierCode">
                  <popup
                  ref='firstFocusInput'
                    @on-fill="checksupplierCode('supplierCode')"
                    v-model="formDataInfo.supplierCode"
                    field-name="supplierCode"
                    :disabled="false"
                    popup-name="SupplierSingleBox"
                    :fill-model.sync="formDataInfo"
                    render-fields="supplierId,supplierCode,supplierName,coinId,coinCode,coinName,taxRate,taxType,rate"
                    from-fields="id,purCode,purName,coinId,coinCode,coinName,taxRate,taxTP,coinRate"
                    :suffix="true"
                    :suffix-model="formDataInfo.supplierName"
                    />
                </FormItem>
          </Col>
           <Col span="8">
            <FormItem label="会计月份" prop="bdYm">
               <DatePicker
                    @on-change="onChange_bdYm"
                    transfer
                    :value="formDataInfo.bdYm"
                    type="month"
                    format="yyyyMM"
                  ></DatePicker>
            </FormItem>
          </Col>
          <Col span="8">
            <FormItem label="未开票金额" prop="bdNoIvAmt">
              <Input
                :disabled="true"
                type="number"
                v-model="formDataInfo.bdNoIvAmt"
                maxlength="20"
                placeholder="未开票金额"
              ></Input>
            </FormItem>
          </Col>
           <Col span="8">
            <FormItem label="已开票金额" prop="bdIvAmt">
              <Input
                :disabled="true"
                type="number"
                v-model="formDataInfo.bdIvAmt"
                maxlength="20"
                placeholder="已开票金额"
              ></Input>
            </FormItem>
          </Col>
          <Col span="8">
            <FormItem label="货币" prop="coinCode">
                <popup
                  v-model="formDataInfo.coinCode"
                  field-name="coinCode"
                  :disabled="false"
                  popup-name="CoinSingleBox "
                  :fill-model.sync="formDataInfo"
                  render-fields="coinId,coinCode,coinName"
                  from-fields="id,coinCode,coinName"
                  :suffix="true"
                  :suffix-model="formDataInfo.coinName"
                  :query-params="{}"
                  />
            </FormItem>
          </Col>
          <Col span="8">
            <FormItem label="税率" prop="taxRate">
                <InputNumber
                style="width:100%"
                  :disabled="false"
                  placeholder="税率"
                  maxlength="20"
                  v-model="formDataInfo.taxRate"
                />
            </FormItem>
          </Col>
           <Col span="8">
            <FormItem label="呆账金额" prop="bdZqAmt">
              <Input
               @on-change="onChange_bdZqAmt"
                :disabled="false"
                 type="number"
                v-model="formDataInfo.bdZqAmt"
                maxlength="20"
                placeholder="呆账金额"
              ></Input>
            </FormItem>
          </Col>
            <Col span="8">
            <FormItem label="关联单号" prop="bdNoGl">
              <Input
                v-model="formDataInfo.bdNoGl"
                maxlength="20"
                placeholder="关联单号"
              >
               <Icon  @click="showProductList()" type="md-add" slot="suffix" v-show="!detailDisabled"/>
              </Input>
            </FormItem>
          </Col>
            <Col span="8">
            <FormItem label="呆账原因" prop="bdDesc">
              <Input
                v-model="formDataInfo.bdDesc"
                maxlength="20"
                placeholder="呆账原因"
              ></Input>
            </FormItem>
          </Col>
            <Col span="8">
            <FormItem label="税别" prop="taxType">
               <optionSearch
                    @onChange="optionOnChange"
                    :defaultItem="formDataInfo.taxType"
                    :loaddingDataWhen="showWindow"
                    formKey="taxType"
                    query="taxTP"
                  />
            </FormItem>
          </Col>
          <Col span="16">
            <FormItem label="备注" prop="remark">
              <Input
                :disabled="false"
                v-model="formDataInfo.remark"
                maxlength="80"
                placeholder="备注"
              ></Input>
            </FormItem>
          </Col>
        </Row>
      </Form>
    </editWindow>
     <editForm
      ref="editForm"
      @on-cancel="onCancelEditForm"
      @submit-success="onSubmitEditForm"
      :isLoaddingDone="salveWindow.isLoaddingDone"
      :action="salveWindow.action"
      v-model="salveWindow.showEditWindow"
      :searchParams="searchParams"
    />
  </div>
</template>

<script>
/**
 * @desc edit-purinit 应付呆账 描述
 * 所有重要 可以重用的方法 放在了基类,继承即可用重复使用 editBaseMixins,
 * 可以根据需求重写所需的方法:
 *
 * @params 参数
 *
 * @return 返回
 *
 * @author Andy Huang
 *
 * @created 2020/05/18
 */
import dayjs from 'dayjs'
import optionSearch from '../../components/optionSearch'
import popup from '@/components/popup/popup'
import editBaseMixins from '../../mixins/edit'
import { deepCopy } from 'view-design/src/utils/assist'
import { customValidator, uniqueValidator } from '@/libs/validator'
import editForm from './edit-payBadDebtSlave'
import referenceField from '@/components/referenceField/referenceField'
const default_formDataInfo = {
  bdDate: '',
  bdDesc: '',
  bdIvAmt: 0,
  bdNo: '',
  bdNoGl: '',
  bdNoIvAmt: 0,
  bdYm: '',
  bdZqAmt: 0,
  coinCode: '',
  coinId: 0,
  coinName: '',
  rate: 0, // 汇率 默认赋值
  remark: '',
  supplierCode: '',
  supplierId: 0, // 供应商ID
  supplierName: '',
  taxRate: 0,
  taxType: '',
  taxTypeText: ''
}
export default {
  name: 'edit-payBadDebt',
  mixins: [editBaseMixins],
  components: {
    editForm,
    optionSearch,
    popup,
    referenceField
  },

  data () {
    return {
      searchParams: {}, // 传递查询参数
      disabledSubmitBtn: false, // 是否禁用提交按钮
      salveWindow: {
        isLoaddingDone: false, // 窗口是否加载完成
        showEditWindow: false, // 是否显示edit-boxSalesOrderSlave 编辑窗口
        action: 'add' // 当前操作功能 添加/编辑
      },
      actionSubtitle: '应付呆账', // 当前操作副标题
      requestBaseUrl: '/account/payBadDebt', // 请求 查询 操作的基础路径
      formDataInfo: Object.assign({}, default_formDataInfo), // 防止添加和更新数据提交发生冲突
      // 需要验证的数据
      ruleValidate: {
        supplierCode: [
          { required: true, message: '供应商编号不能为空', trigger: 'blur' }
        ],
        bdDate: [
          { required: true, type: 'date', message: '呆账日期不能为空', trigger: 'blur' }
        ],
        bdYm: [
          { required: true, type: 'date', message: '会计月份不能为空', trigger: 'blur' }
        ]
      }
    }
  },
  watch: {
    showWindow: function (n, o) {
      if (n) {
        let _self = this
        this.$nextTick(() => {
          // 延迟赋值,不然数据还没有正确返回的情况下,无法绑定默认值
          setTimeout(() => {
            this.setDefaultData()
          }, 1000)
        })
      }
    }
  },
  methods: {
    //主表供应商弹框选中校验
    checksupplierCode(val){
      this.$refs["formDataInfo"].validateField(val, err => {});
    },
    // 弹框==确认==回调事件,返回选择的数据
    onSubmitEditForm (data) {
      this.formDataInfo.bdNoGl = data
    },
    // 弹框==取消==回调事件
    onCancelEditForm () {

    },
    // 显示关联单号窗口列表
    showProductList () {
      this.searchParams = {
        custId: this.formDataInfo.supplierId// 供应商id
        // filterList:this.selectedList,//(过滤已选的工单号集合,多个都好隔开)
      }
      if (this.popupClickValidator()) {
        this.salveWindow.showEditWindow = true
      }
    },
    // 验证产品编号选择前
    popupClickValidator () {
      if (!this.formDataInfo.supplierCode || this.formDataInfo.supplierCode == '') {
        this.$Message.error('请先选择供应商编号')
        return false
      }
      return true
    },
    // 应付金额 修改触发事件()
    onChange_bdZqAmt () {
      // 新增时，未开票金额=应付金额 在已开票金额未写入值时，单据可以修改和删除
      // 修改时：未开票金额=应付金额 已开票金额一旦写入值时，单据不能修改/不能删除
      this.formDataInfo.bdNoIvAmt = this.formDataInfo.bdZqAmt
    },
    // 设置默认值
    setDefaultData () {
      this.disabledSubmitBtn = false
      // 判断是否禁用提交按钮
      if (this.action != 'add' && this.formDataInfo.bdIvAmt != null && Number(this.formDataInfo.bdIvAmt) > 0) {
        this.disabledSubmitBtn = true
      }
      if (this.formDataInfo.taxType == '' || this.formDataInfo.taxType == null) {
        this.formDataInfo.taxType = '0'
      } else {
        this.formDataInfo.taxType = this.formDataInfo.taxType + ''
      }
      if (this.formDataInfo.bdDate == '' || this.formDataInfo.bdDate == null) {
        this.formDataInfo.bdDate = new Date(dayjs().format('YYYY-MM-DD'))
      } else {
        this.formDataInfo.bdDate = new Date(dayjs(this.formDataInfo.bdDate).format('YYYY-MM-DD'))
      }

      if (this.formDataInfo.bdYm == '' || this.formDataInfo.bdYm == null) {
        this.formDataInfo.bdYm = new Date(dayjs().format('YYYY-MM'))
      } else {
        this.formDataInfo.bdYm = new Date(dayjs(this.formDataInfo.bdYm).format('YYYY-MM'))
      }
    },
    // 呆账日期 变动日期
    onChange_bdDate (item) {
      if (!_.isEmpty(item)) {
        this.formDataInfo.bdDate = new Date(item)
      }
    },
    // 会计月份 变动日期
    onChange_bdYm (item) {
      if (!_.isEmpty(item)) {
        this.formDataInfo.bdYm = new Date(dayjs(item).format('YYYY-MM'))
      }
    },
    // 继承中修改,更新数据时,重置修改一些提交的数据
    resetformDataInfo (_data) {
      _data.bdDate = dayjs(_data.bdDate).format('YYYY-MM-DD')
      _data.bdYm = dayjs(_data.bdYm).format('YYYYMM')
      return _data
    },
    // 继承中修改,添加数据时,重置修改一些提交的数据
    resetAddformDataInfo (_data) {
      _data.bdDate = dayjs(_data.bdDate).format('YYYY-MM-DD')
      _data.bdYm = dayjs(_data.bdYm).format('YYYYMM')
      return _data
    },

    // 重写父类 关闭窗口时 触发事件
    closeActionTigger () {
      // fix 清除上次的错误提示 formDataInfo 为表单ref名称
      this.$refs['formDataInfo'].resetFields()
      this.formDataInfo = Object.assign({}, default_formDataInfo)
    }

  }
}
</script>

<style>
.cl-edit-payBadDebt .ivu-form-item-label {
    text-align: right;
    vertical-align: middle;
    float: left;
    font-size: 14px;
    color: #515a6e;
    line-height: 17px;
    padding: 7px 12px 10px 0;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}
.cl-edit-payBadDebt .right-text {
  width: 160%;
}
</style>
